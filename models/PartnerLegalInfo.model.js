// models/PartnerLegalInfo.model.js - –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ú–û–î–ï–õ–¨ –° –®–ò–§–†–û–í–ê–ù–ò–ï–ú üîê
import mongoose from 'mongoose';

const partnerLegalInfoSchema = new mongoose.Schema({
  // –°–≤—è–∑–∏
  user_id: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    index: true
  },
  
  partner_request_id: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'InitialPartnerRequest',
    required: true,
    index: true
  },
  
  // üîê –ó–ê–®–ò–§–†–û–í–ê–ù–ù–´–ï –Æ–†–ò–î–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï
  legal_data: {
    // üîê –û–°–ù–û–í–ù–´–ï –î–ê–ù–ù–´–ï (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã)
    legal_name: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –ª–∏—Ü–∞
      required: true
    },
    
    siret_number: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π SIRET –Ω–æ–º–µ—Ä (14 —Ü–∏—Ñ—Ä)
      required: true,
      unique: true, // –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      index: true
    },
    
    legal_form: {
      type: String, // SASU, SARL, SAS, etc. (–æ—Ç–∫—Ä—ã—Ç–æ, –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
      required: true,
      enum: [
        'SARL', 'EURL', 'SAS', 'SASU', 'SA', 
        'SNC', 'SCI', 'SELARL', 'Auto-entrepreneur',
        'Micro-entreprise', 'EI', 'EIRL', 'Autre'
      ]
    },
    
    // üîê –ê–î–†–ï–°–ù–´–ï –î–ê–ù–ù–´–ï (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã)
    business_address: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å
      required: true
    },
    
    // üîê –ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã)
    contact_person: {
      type: String, // –ò–º—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ª–∏—Ü–∞ (–º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ)
      required: true
    },
    
    contact_phone: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –¥–ª—è —Å–≤—è–∑–∏
      required: true
    },
    
    // üîê –§–ò–ù–ê–ù–°–û–í–´–ï –î–ê–ù–ù–´–ï (–∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã)
    bank_details: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
      default: null
    },
    
    tax_number: {
      type: String, // –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞–ª–æ–≥–æ–≤—ã–π –Ω–æ–º–µ—Ä
      default: null
    },
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    additional_info: {
      type: String,
      default: null
    }
  },
  
  // –°—Ç–∞—Ç—É—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
  verification_status: {
    type: String,
    enum: ['pending', 'verified', 'rejected', 'needs_correction'],
    default: 'pending',
    index: true
  },
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–≤–µ—Ä–∫–µ
  verification_info: {
    verified_at: Date,
    verified_by: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'AdminUser'
    },
    
    rejected_at: Date,
    rejected_by: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'AdminUser'
    },
    
    rejection_reason: String,
    
    // –ü—Ä–∏–º–µ—á–∞–Ω–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
    correction_notes: String,
    
    // üîê –í–ê–ñ–ù–û: –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π (–¥–ª—è –∞—É–¥–∏—Ç–∞)
    verification_history: [{
      action: {
        type: String,
        enum: ['submitted', 'verified', 'rejected', 'corrected']
      },
      admin_id: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'AdminUser'
      },
      timestamp: {
        type: Date,
        default: Date.now
      },
      notes: String
    }]
  },
  
  // üîê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨ –ò –ê–£–î–ò–¢
  security_info: {
    // –ö–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –ø–æ–¥–∞–Ω—ã
    submitted_at: {
      type: Date,
      required: true,
      default: Date.now
    },
    
    // IP –∞–¥—Ä–µ—Å —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–æ–¥–∞–ª–∏ –¥–∞–Ω–Ω—ã–µ
    submission_ip: String,
    
    // User-Agent –±—Ä–∞—É–∑–µ—Ä–∞
    user_agent: String,
    
    // –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    last_modified_at: {
      type: Date,
      default: Date.now
    },
    
    // –ö—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–º–µ–Ω–∏–ª (–∞–¥–º–∏–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    last_modified_by: {
      user_id: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'User'
      },
      admin_id: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'AdminUser'
      },
      role: {
        type: String,
        enum: ['partner', 'admin']
      }
    },
    
    // üîê –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ (–¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)
    decryption_attempts: {
      type: Number,
      default: 0
    },
    
    // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    last_unauthorized_access: {
      ip: String,
      timestamp: Date,
      user_agent: String
    }
  }
}, {
  timestamps: true
});

// ================ –ò–ù–î–ï–ö–°–´ –î–õ–Ø –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò ================

partnerLegalInfoSchema.index({ partner_request_id: 1 });
partnerLegalInfoSchema.index({ user_id: 1 });
partnerLegalInfoSchema.index({ 'legal_data.siret_number': 1 }, { unique: true });
partnerLegalInfoSchema.index({ verification_status: 1 });
partnerLegalInfoSchema.index({ 'security_info.submitted_at': 1 });

// –°–æ—Å—Ç–∞–≤–Ω–æ–π –∏–Ω–¥–µ–∫—Å –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
partnerLegalInfoSchema.index({ 
  verification_status: 1, 
  'security_info.submitted_at': -1 
});

// ================ –ú–ï–¢–û–î–´ –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê ================

/**
 * üîê –ë–ï–ó–û–ü–ê–°–ù–û–ï –æ–¥–æ–±—Ä–µ–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
 */
partnerLegalInfoSchema.methods.verify = function(adminId, notes = '') {
  this.verification_status = 'verified';
  this.verification_info.verified_by = adminId;
  this.verification_info.verified_at = new Date();
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
  this.verification_info.verification_history.push({
    action: 'verified',
    admin_id: adminId,
    timestamp: new Date(),
    notes
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  this.security_info.last_modified_at = new Date();
  this.security_info.last_modified_by = {
    admin_id: adminId,
    role: 'admin'
  };
  
  return this.save();
};

/**
 * üîê –ë–ï–ó–û–ü–ê–°–ù–û–ï –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
 */
partnerLegalInfoSchema.methods.reject = function(adminId, reason, correctionNotes = '') {
  this.verification_status = 'rejected';
  this.verification_info.rejected_by = adminId;
  this.verification_info.rejected_at = new Date();
  this.verification_info.rejection_reason = reason;
  this.verification_info.correction_notes = correctionNotes;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
  this.verification_info.verification_history.push({
    action: 'rejected',
    admin_id: adminId,
    timestamp: new Date(),
    notes: `${reason}. ${correctionNotes}`
  });
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  this.security_info.last_modified_at = new Date();
  this.security_info.last_modified_by = {
    admin_id: adminId,
    role: 'admin'
  };
  
  return this.save();
};

/**
 * üîê –ó–∞–ø—Ä–æ—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
 */
partnerLegalInfoSchema.methods.requestCorrection = function(adminId, notes) {
  this.verification_status = 'needs_correction';
  this.verification_info.correction_notes = notes;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
  this.verification_info.verification_history.push({
    action: 'corrected',
    admin_id: adminId,
    timestamp: new Date(),
    notes
  });
  
  return this.save();
};

/**
 * üîê –ë–ï–ó–û–ü–ê–°–ù–´–ô –º–µ—Ç–æ–¥ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ø—ã—Ç–æ–∫ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏
 */
partnerLegalInfoSchema.methods.logDecryptionAttempt = function(authorized = true, ip = '', userAgent = '') {
  if (authorized) {
    this.security_info.decryption_attempts += 1;
  } else {
    // –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–ø—ã—Ç–∫—É
    this.security_info.last_unauthorized_access = {
      ip,
      timestamp: new Date(),
      user_agent: userAgent
    };
  }
  
  return this.save();
};

// ================ –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–¢–û–î–´ ================

/**
 * üîç –ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—É—Å—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
partnerLegalInfoSchema.statics.findByVerificationStatus = function(status) {
  return this.find({ verification_status: status })
    .populate('user_id', 'email role')
    .populate('partner_request_id')
    .sort({ 'security_info.submitted_at': -1 });
};

/**
 * üîç –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
 */
partnerLegalInfoSchema.statics.findForAdminReview = function(filters = {}) {
  const query = {};
  
  if (filters.status) {
    query.verification_status = filters.status;
  }
  
  if (filters.submitted_after) {
    query['security_info.submitted_at'] = { $gte: new Date(filters.submitted_after) };
  }
  
  return this.find(query)
    .populate('user_id', 'email role is_active')
    .populate('partner_request_id', 'business_data.business_name business_data.category status')
    .populate('verification_info.verified_by', 'full_name role')
    .populate('verification_info.rejected_by', 'full_name role')
    .sort({ 'security_info.submitted_at': -1 });
};

/**
 * üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–æ–π –ø–∞–Ω–µ–ª–∏
 */
partnerLegalInfoSchema.statics.getVerificationStats = function() {
  return this.aggregate([
    {
      $group: {
        _id: '$verification_status',
        count: { $sum: 1 },
        latest: { $max: '$security_info.submitted_at' }
      }
    }
  ]);
};

// ================ MIDDLEWARE ================

/**
 * üîê Pre-save middleware –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
partnerLegalInfoSchema.pre('save', function(next) {
  // –û–±–Ω–æ–≤–ª—è–µ–º last_modified_at –ø—Ä–∏ –ª—é–±–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
  if (this.isModified() && !this.isNew) {
    this.security_info.last_modified_at = new Date();
  }
  
  next();
});

/**
 * üîê Post-save middleware –¥–ª—è –∞—É–¥–∏—Ç–∞
 */
partnerLegalInfoSchema.post('save', function(doc) {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –∞—É–¥–∏—Ç–∞
  console.log(`üìã Legal info ${doc._id} updated: status=${doc.verification_status}`);
});

// ================ –í–ò–†–¢–£–ê–õ–¨–ù–´–ï –ü–û–õ–Ø ================

/**
 * –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
 */
partnerLegalInfoSchema.virtual('isOverdue').get(function() {
  if (this.verification_status !== 'pending') return false;
  
  const submittedDate = new Date(this.security_info.submitted_at);
  const daysSinceSubmission = (Date.now() - submittedDate) / (1000 * 60 * 60 * 24);
  
  return daysSinceSubmission > 7; // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –µ—Å–ª–∏ –±–æ–ª—å—à–µ 7 –¥–Ω–µ–π
});

/**
 * –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è
 */
partnerLegalInfoSchema.virtual('lastAction').get(function() {
  const history = this.verification_info.verification_history;
  return history.length > 0 ? history[history.length - 1] : null;
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –≤ JSON
partnerLegalInfoSchema.set('toJSON', { virtuals: true });
partnerLegalInfoSchema.set('toObject', { virtuals: true });

// üÜï –ò–°–ü–†–ê–í–õ–ï–ù–û: ES6 export
const PartnerLegalInfo = mongoose.model('PartnerLegalInfo', partnerLegalInfoSchema);
export default PartnerLegalInfo;
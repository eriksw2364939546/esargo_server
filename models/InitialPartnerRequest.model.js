// models/InitialPartnerRequest.model.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ú–û–î–ï–õ–¨ üéØ
import mongoose from 'mongoose';

const initialPartnerRequestSchema = new mongoose.Schema({
  user_id: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    unique: true,
    index: true
  },
  
  // üîê –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï (—á–∞—Å—Ç–∏—á–Ω–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ã)
  personal_data: {
    first_name: {
      type: String,
      required: true,
      trim: true,
      maxlength: 50
    },
    last_name: {
      type: String,
      required: true,
      trim: true,
      maxlength: 50
    },
    phone: {
      type: String, // üîê –ó–ê–®–ò–§–†–û–í–ê–ù
      required: true
    },
    email: {
      type: String, // ‚úÖ –û—Ç–∫—Ä—ã—Ç—ã–π (–∫–æ–ø–∏—è –∏–∑ User)
      required: true,
      lowercase: true,
      trim: true
    }
  },
  
  // üîê –ë–ò–ó–ù–ï–° –î–ê–ù–ù–´–ï (–º–∏–∫—Å –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –∏ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ)
  business_data: {
    // ‚úÖ –û–¢–ö–†–´–¢–´–ï –î–ê–ù–ù–´–ï (–¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤)
    business_name: {
      type: String,
      required: true,
      trim: true,
      maxlength: 100
    },
    brand_name: {
      type: String,
      trim: true,
      maxlength: 100
    },
    category: {
      type: String,
      required: true,
      enum: ['restaurant', 'store'],
      index: true
    },
    description: {
      type: String,
      trim: true,
      maxlength: 500
    },
    
    // üîê –ó–ê–®–ò–§–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï (–∞–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã)
    address: {
      type: String, // üîê –ó–ê–®–ò–§–†–û–í–ê–ù
      required: true
    },
    phone: {
      type: String, // üîê –ó–ê–®–ò–§–†–û–í–ê–ù
      required: true
    },
    email: {
      type: String, // üîê –ó–ê–®–ò–§–†–û–í–ê–ù (–∫–æ–ø–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
      required: true
    },
    floor_unit: {
      type: String, // üîê –ó–ê–®–ò–§–†–û–í–ê–ù
      trim: true
    },
    
    // ‚úÖ –ì–ï–û–õ–û–ö–ê–¶–ò–Ø (–Ω–µ—Ç–æ—á–Ω–∞—è, –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ)
    location: {
      type: {
        type: String,
        enum: ['Point'],
        required: true
      },
      coordinates: {
        type: [Number], // [longitude, latitude]
        required: true
      }
    },
    
    // ‚úÖ –í–õ–ê–î–ï–õ–ï–¶ (–∏–º–µ–Ω–∞ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω—ã)
    owner_name: {
      type: String,
      required: true,
      trim: true
    },
    owner_surname: {
      type: String,
      required: true,
      trim: true
    },
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    cover_image_url: {
      type: String
    }
  },
  
  // üéØ –°–¢–ê–¢–£–° –ó–ê–Ø–í–ö–ò (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô!)
  status: {
    type: String,
    enum: [
      'pending',           // –≠–¢–ê–ü 1: –ñ–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º
      'approved',          // –≠–¢–ê–ü 2: –û–¥–æ–±—Ä–µ–Ω–æ, –º–æ–∂–Ω–æ –ø–æ–¥–∞–≤–∞—Ç—å —é—Ä.–¥–∞–Ω–Ω—ã–µ
      'under_review',      // –≠–¢–ê–ü 3: –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
      'legal_approved',    // üÜï –≠–¢–ê–ü 4: –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã, PartnerProfile —Å–æ–∑–¥–∞–Ω
      'content_review',    // –≠–¢–ê–ü 5: –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
      'completed',         // –≠–¢–ê–ü 6: –í–°–Å –ì–û–¢–û–í–û! –ü—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø
      'rejected'           // –û—Ç–∫–ª–æ–Ω–µ–Ω–æ –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ
    ],
    default: 'pending',
    index: true
  },
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏
  review_info: {
    // –ü–µ—Ä–≤–∏—á–Ω–æ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ (–≠–¢–ê–ü 1‚Üí2)
    reviewed_by: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'AdminUser'
    },
    reviewed_at: {
      type: Date
    },
    decision: {
      type: String,
      enum: ['approved', 'rejected']
    },
    admin_notes: {
      type: String,
      trim: true
    },
    rejection_reason: {
      type: String,
      trim: true
    },
    
    // –û–¥–æ–±—Ä–µ–Ω–∏–µ —é—Ä.–¥–∞–Ω–Ω—ã—Ö (–≠–¢–ê–ü 3‚Üí4)
    legal_approved_by: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'AdminUser'
    },
    legal_approved_at: {
      type: Date
    },
    legal_notes: {
      type: String,
      trim: true
    },
    
    // –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ (–≠–¢–ê–ü 5‚Üí6)
    completed_by: {
      type: mongoose.Schema.Types.ObjectId,
      ref: 'AdminUser'
    },
    completed_at: {
      type: Date
    },
    completion_notes: {
      type: String,
      trim: true
    }
  },
  
  // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  registration_info: {
    registration_ip: {
      type: String,
      index: true
    },
    user_agent: {
      type: String
    },
    whatsapp_consent: {
      type: Boolean,
      default: false
    },
    consent_date: {
      type: Date,
      default: Date.now
    }
  },
  
  // –î–∞—Ç—ã
  submitted_at: {
    type: Date,
    default: Date.now,
    index: true
  }
  
}, {
  timestamps: true
});

// ================ –ò–ù–î–ï–ö–°–´ ================
initialPartnerRequestSchema.index({ 'business_data.category': 1, status: 1 });
initialPartnerRequestSchema.index({ 'business_data.location': '2dsphere' });
initialPartnerRequestSchema.index({ status: 1, submitted_at: 1 });

// ================ –í–ò–†–¢–£–ê–õ–¨–ù–´–ï –ü–û–õ–Ø ================
initialPartnerRequestSchema.virtual('owner_full_name').get(function() {
  return `${this.business_data.owner_name} ${this.business_data.owner_surname}`;
});

initialPartnerRequestSchema.virtual('days_pending').get(function() {
  const now = new Date();
  const submitted = this.submitted_at;
  return Math.floor((now - submitted) / (1000 * 60 * 60 * 24));
});

// ================ –ú–ï–¢–û–î–´ –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê ================

/**
 * üéØ –≠–¢–ê–ü 1‚Üí2: –û–¥–æ–±—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞—è–≤–∫–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –∫ —é—Ä.–¥–∞–Ω–Ω—ã–º)
 */
initialPartnerRequestSchema.methods.approve = function(adminId, notes = '') {
  this.status = 'approved';
  this.review_info = {
    ...this.review_info,
    reviewed_by: adminId,
    reviewed_at: new Date(),
    decision: 'approved',
    admin_notes: notes
  };
  
  return this.save();
};

/**
 * ‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
 */
initialPartnerRequestSchema.methods.reject = function(adminId, reason) {
  this.status = 'rejected';
  this.review_info = {
    ...this.review_info,
    reviewed_by: adminId,
    reviewed_at: new Date(),
    decision: 'rejected',
    rejection_reason: reason
  };
  
  return this.save();
};

/**
 * üÜï –≠–¢–ê–ü 3‚Üí4: –ü–µ—Ä–µ–≤–æ–¥ –≤ —Å—Ç–∞—Ç—É—Å "—é—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã"
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è PartnerLegalInfo –∏ —Å–æ–∑–¥–∞–Ω–∏—è PartnerProfile
 */
initialPartnerRequestSchema.methods.approveLegal = function(adminId, notes = '') {
  this.status = 'legal_approved';
  if (!this.review_info) {
    this.review_info = {};
  }
  this.review_info.legal_approved_by = adminId;
  this.review_info.legal_approved_at = new Date();
  this.review_info.legal_notes = notes;
  
  return this.save();
};

/**
 * üÜï –≠–¢–ê–ü 4‚Üí5: –ü–µ—Ä–µ–≤–æ–¥ –≤ —Å—Ç–∞—Ç—É—Å "–∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ –ø–∞—Ä—Ç–Ω–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
 */
initialPartnerRequestSchema.methods.submitForContentReview = function() {
  this.status = 'content_review';
  return this.save();
};

/**
 * üÜï –≠–¢–ê–ü 5‚Üí6: –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)
 * –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∞–¥–º–∏–Ω–æ–º
 */
initialPartnerRequestSchema.methods.complete = function(adminId, notes = '') {
  this.status = 'completed';
  if (!this.review_info) {
    this.review_info = {};
  }
  this.review_info.completed_by = adminId;
  this.review_info.completed_at = new Date();
  this.review_info.completion_notes = notes;
  
  return this.save();
};

/**
 * üîÑ –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å—Ç–∞—Ç—É—Å—É (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É)
 */
initialPartnerRequestSchema.methods.revertStatus = function(newStatus, reason) {
  const allowedReverts = {
    'approved': ['pending'],
    'under_review': ['approved'],
    'legal_approved': ['under_review'],
    'content_review': ['legal_approved'],
    'completed': ['content_review']
  };
  
  if (!allowedReverts[this.status] || !allowedReverts[this.status].includes(newStatus)) {
    throw new Error(`–ù–µ–ª—å–∑—è –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å '${this.status}' –Ω–∞ '${newStatus}'`);
  }
  
  this.status = newStatus;
  this.review_info.revert_reason = reason;
  this.review_info.reverted_at = new Date();
  
  return this.save();
};

// ================ –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–¢–û–î–´ ================

/**
 * –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –ø–æ —Å—Ç–∞—Ç—É—Å—É
 */
initialPartnerRequestSchema.statics.findByStatus = function(status) {
  return this.find({ status }).sort({ submitted_at: 1 });
};

/**
 * –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º
 */
initialPartnerRequestSchema.statics.findPendingApproval = function() {
  return this.find({ 
    status: { $in: ['pending', 'under_review', 'content_review'] }
  }).sort({ submitted_at: 1 });
};

/**
 * üÜï –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –≥–æ—Ç–æ–≤—ã—Ö –¥–ª—è –ø–æ–¥–∞—á–∏ —é—Ä.–¥–∞–Ω–Ω—ã—Ö
 */
initialPartnerRequestSchema.statics.findReadyForLegalInfo = function() {
  return this.find({ 
    status: 'approved' // –û–¥–æ–±—Ä–µ–Ω—ã, –Ω–æ –µ—â–µ –Ω–µ—Ç —é—Ä.–¥–∞–Ω–Ω—ã—Ö
  }).sort({ submitted_at: 1 });
};

/**
 * üÜï –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ —Å –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º–∏ —é—Ä.–¥–∞–Ω–Ω—ã–º–∏ (–≥–æ—Ç–æ–≤—ã–µ –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
 */
initialPartnerRequestSchema.statics.findWithApprovedLegal = function() {
  return this.find({ 
    status: 'legal_approved' // –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã, –º–æ–∂–Ω–æ –Ω–∞–ø–æ–ª–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
  }).sort({ submitted_at: 1 });
};

/**
 * –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
 */
initialPartnerRequestSchema.statics.findContentReview = function() {
  return this.find({ 
    status: 'content_review' // –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
  }).sort({ submitted_at: 1 });
};

/**
 * –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ (–ø—É–±–ª–∏—á–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã)
 */
initialPartnerRequestSchema.statics.findCompleted = function() {
  return this.find({ 
    status: 'completed' // –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã
  }).sort({ 'review_info.completed_at': -1 });
};

/**
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞—è–≤–∫–∞–º
 */
initialPartnerRequestSchema.statics.getStats = async function() {
  const stats = await this.aggregate([
    {
      $group: {
        _id: '$status',
        count: { $sum: 1 },
        avg_days_pending: { 
          $avg: { 
            $divide: [
              { $subtract: [new Date(), '$submitted_at'] },
              1000 * 60 * 60 * 24
            ]
          }
        }
      }
    }
  ]);
  
  return stats.reduce((acc, stat) => {
    acc[stat._id] = {
      count: stat.count,
      avg_days_pending: Math.round(stat.avg_days_pending || 0)
    };
    return acc;
  }, {});
};

/**
 * –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–∏–∑–Ω–µ—Å–∞
 */
initialPartnerRequestSchema.statics.findByCategory = function(category) {
  return this.find({ 
    'business_data.category': category 
  }).sort({ submitted_at: -1 });
};

/**
 * –ü–æ–∏—Å–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ (–¥–æ–ª–≥–æ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏)
 */
initialPartnerRequestSchema.statics.findOverdue = function(days = 7) {
  const cutoffDate = new Date();
  cutoffDate.setDate(cutoffDate.getDate() - days);
  
  return this.find({
    status: { $in: ['pending', 'under_review', 'content_review'] },
    submitted_at: { $lt: cutoffDate }
  }).sort({ submitted_at: 1 });
};

// ================ MIDDLEWARE ================

// –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
initialPartnerRequestSchema.pre('save', function(next) {
  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(this.personal_data.email)) {
    return next(new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email'));
  }
  
  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
  const [lng, lat] = this.business_data.location.coordinates;
  if (lng < -180 || lng > 180 || lat < -90 || lat > 90) {
    return next(new Error('–ù–µ–≤–µ—Ä–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã'));
  }
  
  next();
});

// ================ –ù–ê–°–¢–†–û–ô–ö–ò JSON ================
initialPartnerRequestSchema.set('toJSON', { 
  virtuals: true,
  transform: function(doc, ret) {
    // –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—ã—á–Ω–æ–º JSON
    if (ret.business_data) {
      delete ret.business_data.address;
      delete ret.business_data.phone;
      delete ret.business_data.email;
      delete ret.business_data.floor_unit;
    }
    if (ret.personal_data) {
      delete ret.personal_data.phone;
    }
    return ret;
  }
});

initialPartnerRequestSchema.set('toObject', { virtuals: true });

// ================ –≠–ö–°–ü–û–†–¢ ================
export default mongoose.model('InitialPartnerRequest', initialPartnerRequestSchema);
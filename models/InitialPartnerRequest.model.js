// models/InitialPartnerRequest.model.js (–î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –°–¢–ê–¢–£–°–ê)
import mongoose from 'mongoose';

const initialPartnerRequestSchema = new mongoose.Schema({
  user_id: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true,
    unique: true,
    index: true
  },
  
  // ... –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –æ—Å—Ç–∞—é—Ç—Å—è ...
  
  status: {
    type: String,
    enum: [
      'pending',           // –ñ–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–º (–≠–¢–ê–ü 1)
      'approved',          // –û–¥–æ–±—Ä–µ–Ω–æ, –º–æ–∂–Ω–æ –ø–æ–¥–∞–≤–∞—Ç—å —é—Ä.–¥–∞–Ω–Ω—ã–µ (–≠–¢–ê–ü 2) 
      'under_review',      // –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ (–≠–¢–ê–ü 3)
      'legal_approved',    // üÜï –ù–û–í–´–ô! –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã, PartnerProfile —Å–æ–∑–¥–∞–Ω (–≠–¢–ê–ü 4)
      'content_review',    // –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (–≠–¢–ê–ü 5)
      'completed',         // –í–°–Å –ì–û–¢–û–í–û! –ü—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø (–≠–¢–ê–ü 6)
      'rejected'           // –û—Ç–∫–ª–æ–Ω–µ–Ω–æ –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ
    ],
    default: 'pending',
    index: true
  },
  
  // ... –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...
  
}, {
  timestamps: true
});

// ================ –ú–ï–¢–û–î–´ –≠–ö–ó–ï–ú–ü–õ–Ø–†–ê ================

// –û–¥–æ–±—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞—è–≤–∫–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –∫ —é—Ä.–¥–∞–Ω–Ω—ã–º)
initialPartnerRequestSchema.methods.approve = function(adminId, notes = '') {
  this.status = 'approved';
  this.review_info = {
    reviewed_by: adminId,
    reviewed_at: new Date(),
    decision: 'approved',
    admin_notes: notes
  };
  
  return this.save();
};

// –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
initialPartnerRequestSchema.methods.reject = function(adminId, reason) {
  this.status = 'rejected';
  this.review_info = {
    reviewed_by: adminId,
    reviewed_at: new Date(),
    decision: 'rejected',
    rejection_reason: reason
  };
  
  return this.save();
};

// üÜï –ù–û–í–û–ï: –ü–µ—Ä–µ–≤–æ–¥ –≤ —Å—Ç–∞—Ç—É—Å "—é—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã"
initialPartnerRequestSchema.methods.approveLegal = function(adminId, notes = '') {
  this.status = 'legal_approved';
  if (!this.review_info) {
    this.review_info = {};
  }
  this.review_info.legal_approved_by = adminId;
  this.review_info.legal_approved_at = new Date();
  this.review_info.legal_notes = notes;
  
  return this.save();
};

// üÜï –ù–û–í–û–ï: –ü–µ—Ä–µ–≤–æ–¥ –≤ —Å—Ç–∞—Ç—É—Å "–∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
initialPartnerRequestSchema.methods.submitForContentReview = function() {
  this.status = 'content_review';
  return this.save();
};

// üÜï –ù–û–í–û–ï: –§–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ (–ø—É–±–ª–∏—á–Ω—ã–π –¥–æ—Å—Ç—É–ø)
initialPartnerRequestSchema.methods.complete = function(adminId, notes = '') {
  this.status = 'completed';
  if (!this.review_info) {
    this.review_info = {};
  }
  this.review_info.completed_by = adminId;
  this.review_info.completed_at = new Date();
  this.review_info.completion_notes = notes;
  
  return this.save();
};

// ================ –°–¢–ê–¢–ò–ß–ï–°–ö–ò–ï –ú–ï–¢–û–î–´ ================

// –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –ø–æ —Å—Ç–∞—Ç—É—Å—É
initialPartnerRequestSchema.statics.findByStatus = function(status) {
  return this.find({ status }).sort({ submitted_at: 1 });
};

// –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö –æ–¥–æ–±—Ä–µ–Ω–∏—è
initialPartnerRequestSchema.statics.findPendingApproval = function() {
  return this.find({ 
    status: { $in: ['pending', 'under_review', 'content_review'] }
  }).sort({ submitted_at: 1 });
};

// üÜï –ù–û–í–û–ï: –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ –≥–æ—Ç–æ–≤—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
initialPartnerRequestSchema.statics.findReadyForProfile = function() {
  return this.find({ 
    status: 'approved' // –û–¥–æ–±—Ä–µ–Ω—ã, –Ω–æ –µ—â–µ –Ω–µ—Ç —é—Ä.–¥–∞–Ω–Ω—ã—Ö
  }).sort({ submitted_at: 1 });
};

// üÜï –ù–û–í–û–ï: –ü–æ–∏—Å–∫ –∑–∞—è–≤–æ–∫ —Å –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º–∏ —é—Ä.–¥–∞–Ω–Ω—ã–º–∏
initialPartnerRequestSchema.statics.findWithApprovedLegal = function() {
  return this.find({ 
    status: 'legal_approved' // –Æ—Ä.–¥–∞–Ω–Ω—ã–µ –æ–¥–æ–±—Ä–µ–Ω—ã, –º–æ–∂–Ω–æ –Ω–∞–ø–æ–ª–Ω—è—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
  }).sort({ submitted_at: 1 });
};

export default mongoose.model('InitialPartnerRequest', initialPartnerRequestSchema);
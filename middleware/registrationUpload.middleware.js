// middleware/registrationUpload.middleware.js - –ê–¥–∞–ø—Ç–µ—Ä –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ fileUpload —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π
import { uploadDocuments, processDocuments } from './fileUpload.middleware.js';

/**
 * ================ MULTER –î–õ–Ø –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ö–£–†–¨–ï–†–û–í ================
 * –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π uploadDocuments –∏–∑ fileUpload.middleware.js
 * –ù–æ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
 */
export const uploadCourierRegistrationDocuments = (req, res, next) => {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º uploadType –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ middleware
  req.body.uploadType = 'courier-documents';
  req.body.userRole = 'courier';
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π uploadDocuments (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ 5 —Ñ–∞–π–ª–æ–≤)
  uploadDocuments(req, res, (err) => {
    if (err) {
      return res.status(400).json({
        result: false,
        message: err.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∫—É—Ä—å–µ—Ä–∞"
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const files = req.files || [];
    if (files.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç"
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const vehicleType = req.body.vehicle_type;
    const requiredFields = ['id_card', 'bank_rib']; // –ë–∞–∑–æ–≤—ã–µ –¥–ª—è –≤—Å–µ—Ö
    
    if (['motorbike', 'car'].includes(vehicleType)) {
      requiredFields.push('driver_license', 'insurance');
    }
    
    if (vehicleType === 'car') {
      requiredFields.push('vehicle_registration');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã
    const uploadedFields = files.map(file => file.fieldname);
    const missingFields = requiredFields.filter(field => !uploadedFields.includes(field));
    
    if (missingFields.length > 0) {
      return res.status(400).json({
        result: false,
        message: `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: ${missingFields.join(', ')}`,
        missing_documents: missingFields,
        required_documents: requiredFields
      });
    }
    
    next();
  });
};

/**
 * ================ MULTER –î–õ–Ø –ü–û–î–ê–ß–ò –î–û–ö–£–ú–ï–ù–¢–û–í –ü–ê–†–¢–ù–ï–†–û–í ================
 * –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π uploadDocuments –∏–∑ fileUpload.middleware.js
 */
export const uploadPartnerLegalDocuments = (req, res, next) => {
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º uploadType –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ middleware
  req.body.uploadType = 'partner-documents';
  req.body.userRole = 'partner';
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π uploadDocuments
  uploadDocuments(req, res, (err) => {
    if (err) {
      return res.status(400).json({
        result: false,
        message: err.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–∞—Ä—Ç–Ω–µ—Ä–∞"
      });
    }
    
    const files = req.files || [];
    if (files.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç"
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ª–µ–≥–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    const uploadedFields = files.map(file => file.fieldname);
    const requiredFields = ['kbis_document', 'id_document'];
    
    const missingFields = requiredFields.filter(field => !uploadedFields.includes(field));
    
    if (missingFields.length > 0) {
      return res.status(400).json({
        result: false,
        message: `–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: ${missingFields.join(', ')}`,
        missing_documents: missingFields,
        required_documents: requiredFields
      });
    }
    
    next();
  });
};

/**
 * ================ –û–ë–†–ê–ë–û–¢–ö–ê –î–û–ö–£–ú–ï–ù–¢–û–í –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ================
 * –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π processDocuments –∏ —Å–æ–∑–¥–∞–µ—Ç URL –ø–æ–ª—è
 */
export const processCourierRegistrationDocuments = (req, res, next) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π processDocuments
  processDocuments(req, res, (err) => {
    if (err) {
      return next(err);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const uploadedDocuments = req.uploadedDocuments || [];
    
    if (uploadedDocuments.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"
      });
    }
    
    // ‚úÖ –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê: –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ñ–∞–π–ª—ã –≤ URL –ø–æ–ª—è –¥–ª—è —Å–µ—Ä–≤–∏—Å–æ–≤
    uploadedDocuments.forEach(doc => {
      const fieldName = `${doc.documentType}_url`;
      req.body[fieldName] = doc.url; // –î–æ–±–∞–≤–ª—è–µ–º URL –≤ req.body
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üìÑ COURIER REGISTRATION DOCUMENTS PROCESSED:', {
      uploaded_count: uploadedDocuments.length,
      url_fields_created: uploadedDocuments.map(doc => `${doc.documentType}_url`),
      vehicle_type: req.body.vehicle_type
    });
    
    next();
  });
};

/**
 * ================ –û–ë–†–ê–ë–û–¢–ö–ê –î–û–ö–£–ú–ï–ù–¢–û–í –ü–ê–†–¢–ù–ï–†–û–í ================
 * –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π processDocuments –∏ —Å–æ–∑–¥–∞–µ—Ç URL –ø–æ–ª—è
 */
export const processPartnerLegalDocuments = (req, res, next) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π processDocuments
  processDocuments(req, res, (err) => {
    if (err) {
      return next(err);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const uploadedDocuments = req.uploadedDocuments || [];
    
    if (uploadedDocuments.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã"
      });
    }
    
    // ‚úÖ –ì–õ–ê–í–ù–ê–Ø –õ–û–ì–ò–ö–ê: –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç documents –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
    req.body.documents = {};
    
    uploadedDocuments.forEach(doc => {
      req.body.documents[doc.documentType] = doc.url;
    });
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const additionalDocs = uploadedDocuments.filter(doc => 
      !['kbis_document', 'id_document'].includes(doc.documentType)
    );
    
    if (additionalDocs.length > 0) {
      req.body.documents.additional_documents = additionalDocs.map(doc => ({
        name: doc.originalName,
        url: doc.url,
        uploaded_at: new Date()
      }));
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('üìÑ PARTNER LEGAL DOCUMENTS PROCESSED:', {
      uploaded_count: uploadedDocuments.length,
      documents_object: Object.keys(req.body.documents),
      additional_documents_count: additionalDocs.length
    });
    
    next();
  });
};

/**
 * ================ –≠–ö–°–ü–û–†–¢ ================
 */
export {
  uploadCourierRegistrationDocuments,
  uploadPartnerLegalDocuments,
  processCourierRegistrationDocuments,
  processPartnerLegalDocuments
};
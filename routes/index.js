// routes/index.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ò–ú–ü–û–†–¢–´
import express from 'express';
const router = express.Router();

// Import —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ—É—Ç–æ–≤
import partnerRoutes from './Partner.route.js';
import partnerMenuRoutes from './Partner.menu.routes.js'; 
import customerRoutes from './Customer.route.js';
import courierRoutes from './Courier.route.js';
import adminRoutes from './Admin.route.js';
import adminPartnerRoutes from './AdminPartner.route.js';
import adminCourierRoutes from './AdminCourier.route.js';

// üÜï –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ï –ò–ú–ü–û–†–¢–´ –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ó–ê–ö–ê–ó–û–í
import publicRoutes from './Public.route.js';      // –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±—Ä–∞–ª–∏ ../routes/Public/
import cartRoutes from './Cart.route.js';          // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
import orderRoutes from './Order.route.js';        // –ó–∞–∫–∞–∑—ã

import fileUploadRoutes from './FileUpload.route.js';

// Health check endpoint
router.get('/health', (req, res) => {
    res.json({
        success: true,
        message: 'ESARGO API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - UberEats Style',
        service_layer: 'enabled',
        meta_model: 'enabled',
        partner_system: 'fully_implemented',
        menu_system: 'enabled',
        courier_system: 'enabled',
        
        // üÜï –ù–û–í–´–ï –°–ò–°–¢–ï–ú–´
        public_catalog: 'enabled',       // –ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
        shopping_cart: 'enabled',        // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
        order_management: 'enabled',     // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
        payment_system: 'stub_enabled',  // –ó–∞–≥–ª—É—à–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
        
        timestamp: new Date().toISOString()
    });
});

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏) ================
router.use('/public', publicRoutes);

// ================ –û–°–ù–û–í–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –†–û–£–¢–´ ================
router.use('/customers', customerRoutes);
router.use('/cart', cartRoutes);
router.use('/orders', orderRoutes);

// ================ –ü–ê–†–¢–ù–ï–†–°–ö–ò–ï –†–û–£–¢–´ ================
router.use('/partners', partnerRoutes);
router.use('/partners/menu', partnerMenuRoutes);

// ================ –ö–£–†–¨–ï–†–°–ö–ò–ï –†–û–£–¢–´ ================
router.use('/couriers', courierRoutes);

// ================ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –†–û–£–¢–´ ================
router.use('/admin', adminRoutes);
router.use('/admin/partners', adminPartnerRoutes);
router.use('/admin/couriers', adminCourierRoutes);


//======================IMAGES================================

router.use('/uploads', fileUploadRoutes);

// ================ –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ================
router.get('/', (req, res) => {
    res.json({
        success: true,
        message: 'ESARGO API Server - UberEats Style Food Delivery',
        version: '2.1.0',
        architecture: 'Service Layer + Meta Security Model + Full Order Management + Cart System',
        
        available_endpoints: {
            // –ü–£–ë–õ–ò–ß–ù–´–ï (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏) - –∫–∞–∫ UberEats
            public_catalog: {
                restaurants_list: 'GET /api/public/catalog',
                restaurant_details: 'GET /api/public/restaurants/:id',
                restaurant_menu: 'GET /api/public/restaurants/:id/menu',
                search_restaurants: 'GET /api/public/restaurants/search',
                popular_restaurants: 'GET /api/public/restaurants/popular',
                categories: 'GET /api/public/restaurants/categories'
            },
            
            // –ö–õ–ò–ï–ù–¢–°–ö–ò–ï (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ customer)
            customers: {
                register: 'POST /api/customers/register',
                login: 'POST /api/customers/login',
                verify: 'GET /api/customers/verify',
                profile: 'GET /api/customers/profile',
                update_profile: 'PUT /api/customers/profile/:id',
                delete_profile: 'DELETE /api/customers/profile/:id',
                
                // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
                cart_get: 'GET /api/cart',
                cart_add_item: 'POST /api/cart/items',
                cart_update_item: 'PUT /api/cart/items/:item_id',
                cart_remove_item: 'DELETE /api/cart/items/:item_id',
                cart_clear: 'DELETE /api/cart',
                cart_calculate_delivery: 'POST /api/cart/calculate-delivery',
                
                // –ó–∞–∫–∞–∑—ã
                orders_create: 'POST /api/orders',
                orders_my: 'GET /api/orders/my',
                orders_details: 'GET /api/orders/:id',
                orders_cancel: 'POST /api/orders/:id/cancel',
                orders_rate: 'POST /api/orders/:id/rate',
                orders_track: 'GET /api/orders/:id/track'
            },
            
            // –ü–ê–†–¢–ù–ï–†–°–ö–ò–ï (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ partner)
            partners: {
                register: 'POST /api/partners/register',
                login: 'POST /api/partners/login',
                profile: 'GET /api/partners/profile',
                menu_management: 'GET /api/partners/menu/*',
                
                // –ó–∞–∫–∞–∑—ã –ø–∞—Ä—Ç–Ω–µ—Ä–∞
                orders_list: 'GET /api/orders/partner/list',
                orders_accept: 'POST /api/orders/:id/accept',
                orders_reject: 'POST /api/orders/:id/reject',
                orders_ready: 'POST /api/orders/:id/ready'
            },
            
            // –ö–£–†–¨–ï–†–°–ö–ò–ï (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ courier)
            couriers: {
                register: 'POST /api/couriers/register',
                login: 'POST /api/couriers/login',
                profile: 'GET /api/couriers/profile',
                
                // –ó–∞–∫–∞–∑—ã –∫—É—Ä—å–µ—Ä–∞
                orders_available: 'GET /api/orders/courier/available',
                orders_my: 'GET /api/orders/courier/my',
                orders_take: 'POST /api/orders/:id/take',
                orders_pickup: 'POST /api/orders/:id/pickup',
                orders_deliver: 'POST /api/orders/:id/deliver'
            },
            
            // –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ admin)
            admin: {
                login: 'POST /api/admin/login',
                partners: 'GET /api/admin/partners/*',
                couriers: 'GET /api/admin/couriers/*'
            }
        },
        
        // üÜï –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò
        features: {
            public_browsing: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–∞–∫ UberEats)",
            shopping_cart: "–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ —Å —Å–µ—Å—Å–∏—è–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            multi_role_orders: "–ó–∞–∫–∞–∑—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –∫—É—Ä—å–µ—Ä–æ–≤",
            payment_integration: "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏",
            real_time_tracking: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            delivery_calculation: "–†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏",
            rating_system: "–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –∫—É—Ä—å–µ—Ä–æ–≤",
            order_management: "–ü–æ–ª–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∑–∞–∫–∞–∑–∞",
            session_management: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ –∏ –∫–æ—Ä–∑–∏–Ω–∞–º–∏"
        },
        
        // WORKFLOW –ó–ê–ö–ê–ó–ê (–∫–∞–∫ –≤ UberEats)
        order_workflow: {
            step_1: "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (GET /api/public/catalog)",
            step_2: "–ö–ª–∏–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è/–∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è (POST /api/customers/register|login)",
            step_3: "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (GET /api/public/restaurants/:id/menu)",
            step_4: "–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É (POST /api/cart/items)",
            step_5: "–ö–ª–∏–µ–Ω—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É (POST /api/cart/calculate-delivery)",
            step_6: "–ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders)",
            step_7: "–†–µ—Å—Ç–æ—Ä–∞–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç/–æ—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/accept|reject)",
            step_8: "–†–µ—Å—Ç–æ—Ä–∞–Ω –ø–æ–º–µ—á–∞–µ—Ç –∑–∞–∫–∞–∑ –≥–æ—Ç–æ–≤—ã–º (POST /api/orders/:id/ready)",
            step_9: "–ö—É—Ä—å–µ—Ä –±–µ—Ä–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/take)",
            step_10: "–ö—É—Ä—å–µ—Ä –∑–∞–±–∏—Ä–∞–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/pickup)",
            step_11: "–ö—É—Ä—å–µ—Ä –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/deliver)",
            step_12: "–ö–ª–∏–µ–Ω—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/rate)"
        },
        
        timestamp: new Date().toISOString()
    });
});

export default router;
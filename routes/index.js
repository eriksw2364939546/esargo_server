// routes/index.js (–û–ë–ù–û–í–õ–ï–ù–ù–´–ô —Å —Å–∏—Å—Ç–µ–º–æ–π –∑–∞–∫–∞–∑–æ–≤ –∫–∞–∫ UberEats)
import express from 'express';
const router = express.Router();

// Import —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–æ—É—Ç–æ–≤
import partnerRoutes from './Partner.route.js';
import partnerMenuRoutes from './Partner.menu.routes.js'; 
import customerRoutes from './Customer.route.js';
import courierRoutes from './Courier.route.js';
import adminRoutes from './Admin.route.js';
import adminPartnerRoutes from './AdminPartner.route.js';
import adminCourierRoutes from './AdminCourier.route.js';

// üÜï –ù–û–í–´–ï –†–û–£–¢–´ –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ó–ê–ö–ê–ó–û–í
import publicRoutes from '../routes/Public/Public.route.js';        // –ü—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥
import cartRoutes from './Cart.route.js';            // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
import orderRoutes from './Order.route.js';          // –ó–∞–∫–∞–∑—ã

// Health check endpoint
router.get('/health', (req, res) => {
    res.json({
        success: true,
        message: 'ESARGO API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - UberEats Style',
        service_layer: 'enabled',
        meta_model: 'enabled',
        partner_system: 'fully_implemented',
        menu_system: 'enabled',
        courier_system: 'enabled',
        
        // üÜï –ù–û–í–´–ï –°–ò–°–¢–ï–ú–´
        public_catalog: 'enabled',       // –ü—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤
        shopping_cart: 'enabled',        // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
        order_management: 'enabled',     // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏
        payment_system: 'stub_enabled',  // –ó–∞–≥–ª—É—à–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
        
        timestamp: new Date().toISOString()
    });
});

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏) ================
// üÜï –ü—É–±–ª–∏—á–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ - –∫–∞–∫ UberEats –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
router.use('/public', publicRoutes);

// ================ –û–°–ù–û–í–ù–´–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –†–û–£–¢–´ ================

// Customer routes (—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø—Ä–æ—Ñ–∏–ª—å)
router.use('/customers', customerRoutes);

// üÜï Cart routes (–∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫) - —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
router.use('/cart', cartRoutes);

// üÜï Order routes (—Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏) - –º—É–ª—å—Ç–∏-—Ä–æ–ª—å
router.use('/orders', orderRoutes);

// Partner routes (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º)
router.use('/partners', partnerRoutes);

// Partner menu routes (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é)
router.use('/partners/menu', partnerMenuRoutes);

// Courier routes (—Å–∏—Å—Ç–µ–º–∞ –∫—É—Ä—å–µ—Ä–æ–≤)
router.use('/couriers', courierRoutes);

// ================ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –†–û–£–¢–´ ================

// Admin routes (–æ—Å–Ω–æ–≤–Ω–∞—è –∞–¥–º–∏–Ω–∫–∞)
router.use('/admin', adminRoutes);

// Admin partner management routes (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞–º–∏)
router.use('/admin/partners', adminPartnerRoutes);

// Admin courier management routes (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞–º–∏) 
router.use('/admin/couriers', adminCourierRoutes);

// ================ –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ================

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API
router.get('/', (req, res) => {
    res.json({
        success: true,
        message: 'ESARGO API Server - UberEats Style Food Delivery',
        version: '2.1.0',
        architecture: 'Service Layer + Meta Security Model + Full Order Management + Cart System',
        
        // üÜï –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –≠–ù–î–ü–û–ò–ù–¢–´
        available_endpoints: {
            // –ü–£–ë–õ–ò–ß–ù–´–ï (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏) - –∫–∞–∫ UberEats
            public_catalog: {
                restaurants_list: 'GET /api/public/catalog',
                restaurant_details: 'GET /api/public/restaurants/:id',
                restaurant_menu: 'GET /api/public/restaurants/:id/menu',
                search_restaurants: 'GET /api/public/restaurants/search',
                popular_restaurants: 'GET /api/public/restaurants/popular',
                categories: 'GET /api/public/restaurants/categories'
            },
            
            // –ö–õ–ò–ï–ù–¢–°–ö–ò–ï (—Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ customer)
            customers: {
                register: 'POST /api/customers/register',
                login: 'POST /api/customers/login',
                verify: 'GET /api/customers/verify',
                profile: 'GET /api/customers/profile',
                update_profile: 'PUT /api/customers/profile/:id',
                delete_profile: 'DELETE /api/customers/profile/:id',
                
                // –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫
                cart_get: 'GET /api/cart',
                cart_add_item: 'POST /api/cart/items',
                cart_update_item: 'PUT /api/cart/items/:item_id',
                cart_remove_item: 'DELETE /api/cart/items/:item_id',
                cart_clear: 'DELETE /api/cart',
                cart_calculate_delivery: 'POST /api/cart/calculate-delivery',
                
                // –ó–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞
                create_order: 'POST /api/orders',
                my_orders: 'GET /api/orders/my',
                order_details: 'GET /api/orders/:id',
                cancel_order: 'POST /api/orders/:id/cancel',
                rate_order: 'POST /api/orders/:id/rate'
            },
            
            // –ü–ê–†–¢–ù–ï–†–°–ö–ò–ï (—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã)
            partners: {
                register: 'POST /api/partners/register',
                login: 'POST /api/partners/login',
                verify: 'GET /api/partners/verify',
                dashboard: 'GET /api/partners/dashboard',
                legal_info: 'POST /api/partners/legal-info/:request_id',
                profile: 'GET /api/partners/profile',
                update_profile: 'PUT /api/partners/profile/:id',
                
                // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
                menu_categories: {
                    list: 'GET /api/partners/menu/categories',
                    create: 'POST /api/partners/menu/categories',
                    update: 'PUT /api/partners/menu/categories/:category_id',
                    delete: 'DELETE /api/partners/menu/categories/:category_id'
                },
                menu_products: {
                    list: 'GET /api/partners/menu/products',
                    create: 'POST /api/partners/menu/products',
                    update: 'PUT /api/partners/menu/products/:product_id',
                    delete: 'DELETE /api/partners/menu/products/:product_id'
                },
                menu_stats: 'GET /api/partners/menu/stats',
                
                // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞
                orders_list: 'GET /api/orders/partner/list',
                accept_order: 'POST /api/orders/:id/accept',
                reject_order: 'POST /api/orders/:id/reject',
                mark_ready: 'POST /api/orders/:id/ready'
            },
            
            // –ö–£–†–¨–ï–†–°–ö–ò–ï (–¥–æ—Å—Ç–∞–≤–∫–∞)
            couriers: {
                register: 'POST /api/couriers/register',
                login: 'POST /api/couriers/login',
                verify: 'GET /api/couriers/verify',
                profile: 'GET /api/couriers/profile',
                toggle_availability: 'PATCH /api/couriers/availability',
                update_location: 'PATCH /api/couriers/location',
                
                // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∫—É—Ä—å–µ—Ä–∞
                available_orders: 'GET /api/orders/courier/available',
                my_orders: 'GET /api/orders/courier/my',
                take_order: 'POST /api/orders/:id/take',
                pickup_order: 'POST /api/orders/:id/pickup',
                deliver_order: 'POST /api/orders/:id/deliver'
            },
            
            // –û–ë–©–ò–ï (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤)
            tracking: {
                track_order: 'GET /api/orders/:id/track',
                order_status: 'GET /api/orders/:id/status'
            },
            
            // –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï
            admin: {
                login: 'POST /api/admin/login',
                verify: 'GET /api/admin/verify',
                profile: 'GET /api/admin/profile',
                create_admin: 'POST /api/admin/create',
                list_admins: 'GET /api/admin/list',
                edit_admin: 'PUT /api/admin/edit/:id',
                delete_admin: 'DELETE /api/admin/delete/:id'
            },
            admin_partners: {
                view_requests: 'GET /api/admin/partners/requests',
                view_request: 'GET /api/admin/partners/requests/:id',
                approve_request: 'POST /api/admin/partners/requests/:id/approve',
                reject_request: 'POST /api/admin/partners/requests/:id/reject',
                approve_legal: 'POST /api/admin/partners/legal/:id/approve',
                reject_legal: 'POST /api/admin/partners/legal/:id/reject',
                publish_partner: 'POST /api/admin/partners/profiles/:id/publish'
            },
            admin_couriers: {
                view_applications: 'GET /api/admin/couriers/applications',
                view_application: 'GET /api/admin/couriers/applications/:id',
                approve_application: 'POST /api/admin/couriers/applications/:id/approve',
                reject_application: 'POST /api/admin/couriers/applications/:id/reject',
                view_profiles: 'GET /api/admin/couriers/profiles',
                block_courier: 'POST /api/admin/couriers/profiles/:id/block',
                unblock_courier: 'POST /api/admin/couriers/profiles/:id/unblock'
            }
        },
        
        // üÜï –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò
        features: {
            public_browsing: "–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∫–∞–∫ UberEats)",
            shopping_cart: "–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫ —Å —Å–µ—Å—Å–∏—è–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ",
            multi_role_orders: "–ó–∞–∫–∞–∑—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤, –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –∫—É—Ä—å–µ—Ä–æ–≤",
            payment_integration: "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏",
            real_time_tracking: "–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
            delivery_calculation: "–†–∞—Å—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏",
            rating_system: "–°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–æ–∫ –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –∏ –∫—É—Ä—å–µ—Ä–æ–≤",
            order_management: "–ü–æ–ª–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∑–∞–∫–∞–∑–∞",
            session_management: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ –∏ –∫–æ—Ä–∑–∏–Ω–∞–º–∏"
        },
        
        // WORKFLOW –ó–ê–ö–ê–ó–ê (–∫–∞–∫ –≤ UberEats)
        order_workflow: {
            step_1: "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ (GET /api/public/catalog)",
            step_2: "–ö–ª–∏–µ–Ω—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è/–∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è (POST /api/customers/register|login)",
            step_3: "–ö–ª–∏–µ–Ω—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (GET /api/public/restaurants/:id/menu)",
            step_4: "–ö–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É (POST /api/cart/items)",
            step_5: "–ö–ª–∏–µ–Ω—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É (POST /api/cart/calculate-delivery)",
            step_6: "–ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders)",
            step_7: "–†–µ—Å—Ç–æ—Ä–∞–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç/–æ—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/accept|reject)",
            step_8: "–†–µ—Å—Ç–æ—Ä–∞–Ω –≥–æ—Ç–æ–≤–∏—Ç –∑–∞–∫–∞–∑ –∏ –ø–æ–º–µ—á–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–º (POST /api/orders/:id/ready)",
            step_9: "–ö—É—Ä—å–µ—Ä –±–µ—Ä–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/take)",
            step_10: "–ö—É—Ä—å–µ—Ä –∑–∞–±–∏—Ä–∞–µ—Ç —É —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ (POST /api/orders/:id/pickup)",
            step_11: "–ö—É—Ä—å–µ—Ä –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç—É (POST /api/orders/:id/deliver)",
            step_12: "–ö–ª–∏–µ–Ω—Ç –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –∑–∞–∫–∞–∑ (POST /api/orders/:id/rate)"
        },
        
        security_features: {
            meta_mode: "–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö",
            jwt_authentication: "JWT —Ç–æ–∫–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö —Ä–æ–ª–µ–π",
            role_based_access: "–†–∞–∑–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –ø–æ —Ä–æ–ª—è–º",
            session_security: "–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –∫–æ—Ä–∑–∏–Ω",
            input_validation: "–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö",
            rate_limiting: "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤"
        },
        
        payment_system: {
            status: "stub_implementation",
            description: "–ó–∞–≥–ª—É—à–∫–∞ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
            supported_methods: ["card", "cash"],
            currencies: ["EUR", "USD", "RUB"],
            ready_for_integration: ["Stripe", "PayPal", "Square"],
            test_endpoints: {
                success_payment: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ test_mode: true –≤ –∑–∞–ø—Ä–æ—Å–µ",
                failed_payment: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ test_error: 'card_declined' –≤ –∑–∞–ø—Ä–æ—Å–µ"
            }
        },
        
        database_collections: {
            users: "–ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–∫–ª–∏–µ–Ω—Ç—ã, –ø–∞—Ä—Ç–Ω–µ—Ä—ã, –∫—É—Ä—å–µ—Ä—ã)",
            customer_profiles: "–ü—Ä–æ—Ñ–∏–ª–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤",
            partner_profiles: "–ü—Ä–æ—Ñ–∏–ª–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤",
            courier_profiles: "–ü—Ä–æ—Ñ–∏–ª–∏ –∫—É—Ä—å–µ—Ä–æ–≤", 
            products: "–¢–æ–≤–∞—Ä—ã –∏ –±–ª—é–¥–∞",
            carts: "–ö–æ—Ä–∑–∏–Ω—ã –ø–æ–∫—É–ø–æ–∫ (—Å–µ—Ä–≤–µ—Ä–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞)",
            orders: "–ó–∞–∫–∞–∑—ã —Å –ø–æ–ª–Ω—ã–º –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º",
            messages: "–°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
            admin_logs: "–õ–æ–≥–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"
        },
        
        environment: process.env.NODE_ENV || 'development',
        timestamp: new Date().toISOString()
    });
});

export default router;
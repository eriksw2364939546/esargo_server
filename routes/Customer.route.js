// routes/Customer.route.js - –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–æ—É—Ç—ã —Å –ø–æ–ª–Ω—ã–º API —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞–º–∏
import express from 'express';
import {
  register,
  login,
  verify,
  getProfile,
  edit,
  delClient
} from '../controllers/CustomerController.js';

// ‚úÖ –ù–û–í–´–ô –ò–ú–ü–û–†–¢: –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞–º–∏
import {
  addAddress,
  getAddresses,
  getAddressById,
  updateAddress,
  removeAddress,
  setDefaultAddress,
  getDeliveryZonesInfo,
  getMockAddresses,
  validateAddress
} from '../controllers/AddressController.js';

import { 
  authenticateCustomer, 
  requireRole,
  checkProfileOwnership,
  validateCustomerRegistration,
  validateCustomerUpdate
} from '../middleware/customerAuth.middleware.js';

const router = express.Router();

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ (–±–µ–∑ middleware) ================

/**
 * POST /api/customers/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
 * Middleware: validateCustomerRegistration (–≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö + –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è)
 */
router.post('/register', 
  validateCustomerRegistration,
  register
);

/**
 * POST /api/customers/login - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * Middleware: –Ω–µ—Ç (–ø—É–±–ª–∏—á–Ω—ã–π endpoint)
 */
router.post('/login', login);

/**
 * GET /api/customers/health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ä–æ—É—Ç–æ–≤
 * Middleware: –Ω–µ—Ç (—Å–ª—É–∂–µ–±–Ω—ã–π endpoint)
 */
router.get('/health', (req, res) => {
  res.json({
    result: true,
    message: "Customer routes working correctly",
    service_layer: "enabled",
    middleware: "enabled",
    address_api: "enabled", // ‚úÖ –ù–û–í–û–ï
    available_endpoints: {
      public: {
        register: "POST /api/customers/register",
        login: "POST /api/customers/login",
        health: "GET /api/customers/health"
      },
      protected: {
        verify: "GET /api/customers/verify",
        profile: "GET /api/customers/profile",
        update_profile: "PUT /api/customers/profile/:id",
        delete_profile: "DELETE /api/customers/profile/:id",
        // ‚úÖ –ù–û–í–´–ï –≠–ù–î–ü–û–ò–ù–¢–´ –ê–î–†–ï–°–û–í
        addresses: {
          get_all: "GET /api/customers/addresses",
          get_by_id: "GET /api/customers/addresses/:addressId",
          add: "POST /api/customers/addresses",
          update: "PUT /api/customers/addresses/:addressId",
          remove: "DELETE /api/customers/addresses/:addressId",
          set_default: "PATCH /api/customers/addresses/:addressId/default",
          validate: "POST /api/customers/addresses/validate",
          delivery_zones: "GET /api/customers/addresses/delivery-zones",
          mock_data: "GET /api/customers/addresses/mock-data"
        }
      }
    },
    timestamp: new Date().toISOString()
  });
});

// ================ –ó–ê–©–ò–©–ï–ù–ù–´–ï –†–û–£–¢–´ (—Ç—Ä–µ–±—É—é—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏) ================

/**
 * GET /api/customers/verify - –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞
 * Middleware: authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 */
router.get('/verify', 
  authenticateCustomer, 
  verify
);

/**
 * GET /api/customers/profile - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/profile', 
  authenticateCustomer, 
  requireRole('customer'), 
  getProfile
);

/**
 * PUT /api/customers/profile/:id - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 * - checkProfileOwnership (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å)
 * - validateCustomerUpdate (–≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö + –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø—Ä–∏ —Å–º–µ–Ω–µ)
 */
router.put('/profile/:id', 
  authenticateCustomer, 
  requireRole('customer'), 
  checkProfileOwnership,
  validateCustomerUpdate,
  edit
);

/**
 * DELETE /api/customers/profile/:id - –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 * - checkProfileOwnership (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∞ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å)
 */
router.delete('/profile/:id', 
  authenticateCustomer, 
  requireRole('customer'), 
  checkProfileOwnership,
  delClient
);

// ================ üìç –£–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–†–ï–°–ê–ú–ò –î–û–°–¢–ê–í–ö–ò ================

// ‚úÖ –£–¢–ò–õ–ò–¢–ê–†–ù–´–ï –†–û–£–¢–´ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ü–ï–†–ï–î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏)

/**
 * GET /api/customers/addresses/delivery-zones - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–æ–Ω–∞—Ö –¥–æ—Å—Ç–∞–≤–∫–∏
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/addresses/delivery-zones',
  authenticateCustomer,
  requireRole('customer'),
  getDeliveryZonesInfo
);

/**
 * GET /api/customers/addresses/mock-data - –¢–µ—Å—Ç–æ–≤—ã–µ –∞–¥—Ä–µ—Å–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/addresses/mock-data',
  authenticateCustomer,
  requireRole('customer'),
  getMockAddresses
);

/**
 * POST /api/customers/addresses/validate - –í–∞–ª–∏–¥–∞—Ü–∏—è –∞–¥—Ä–µ—Å–∞ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.post('/addresses/validate',
  authenticateCustomer,
  requireRole('customer'),
  validateAddress
);

// ‚úÖ –û–°–ù–û–í–ù–´–ï CRUD –†–û–£–¢–´

/**
 * GET /api/customers/addresses - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/addresses', 
  authenticateCustomer, 
  requireRole('customer'), 
  getAddresses
);

/**
 * POST /api/customers/addresses - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 * Body: {
 *   address: String (required),
 *   lat?: Number,
 *   lng?: Number,
 *   name?: '–î–æ–º' | '–†–∞–±–æ—Ç–∞' | '–†–æ–¥–∏—Ç–µ–ª–∏' | '–î—Ä—É–∑—å—è' | '–î—Ä—É–≥–æ–µ',
 *   is_default?: Boolean,
 *   details?: {
 *     apartment?: String,
 *     entrance?: String,
 *     intercom?: String,
 *     floor?: String,
 *     delivery_notes?: String
 *   }
 * }
 */
router.post('/addresses', 
  authenticateCustomer, 
  requireRole('customer'), 
  addAddress
);

/**
 * GET /api/customers/addresses/:addressId - –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/addresses/:addressId',
  authenticateCustomer,
  requireRole('customer'),
  getAddressById
);

/**
 * PUT /api/customers/addresses/:addressId - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 * Body: {
 *   address?: String,
 *   name?: '–î–æ–º' | '–†–∞–±–æ—Ç–∞' | '–†–æ–¥–∏—Ç–µ–ª–∏' | '–î—Ä—É–∑—å—è' | '–î—Ä—É–≥–æ–µ',
 *   is_default?: Boolean,
 *   details?: {
 *     apartment?: String,
 *     entrance?: String,
 *     intercom?: String,
 *     floor?: String,
 *     delivery_notes?: String
 *   }
 * }
 */
router.put('/addresses/:addressId', 
  authenticateCustomer, 
  requireRole('customer'), 
  updateAddress
);

/**
 * DELETE /api/customers/addresses/:addressId - –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.delete('/addresses/:addressId', 
  authenticateCustomer, 
  requireRole('customer'), 
  removeAddress
);

/**
 * PATCH /api/customers/addresses/:addressId/default - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.patch('/addresses/:addressId/default',
  authenticateCustomer,
  requireRole('customer'),
  setDefaultAddress
);

// ================ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ó–ê–©–ò–©–ï–ù–ù–´–ï –†–û–£–¢–´ ================

/**
 * GET /api/customers/favorites - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/favorites', 
  authenticateCustomer, 
  requireRole('customer'), 
  (req, res) => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö
    res.json({
      result: true,
      message: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
      favorites: []
    });
  }
);

/**
 * POST /api/customers/favorites/:partnerId - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.post('/favorites/:partnerId', 
  authenticateCustomer, 
  requireRole('customer'), 
  (req, res) => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    res.json({
      result: true,
      message: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    });
  }
);

/**
 * DELETE /api/customers/favorites/:partnerId - –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.delete('/favorites/:partnerId', 
  authenticateCustomer, 
  requireRole('customer'), 
  (req, res) => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
    res.json({
      result: true,
      message: "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"
    });
  }
);

/**
 * GET /api/customers/orders - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
 * Middleware: 
 * - authenticateCustomer (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞)
 * - requireRole('customer') (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏)
 */
router.get('/orders', 
  authenticateCustomer, 
  requireRole('customer'), 
  (req, res) => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
    res.json({
      result: true,
      message: "–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
      orders: []
    });
  }
);

export default router;
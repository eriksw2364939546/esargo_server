// ================ routes/Partner.route.js (–û–ë–ù–û–í–õ–ï–ù–ù–´–ô –° –í–ê–õ–ò–î–ê–¶–ò–Ø–ú–ò) ================
import express from 'express';
import {
    registerPartner,
    loginPartnerController,
    verifyPartner,
    getProfile,
    updateProfile,
    deletePartner,
    getDashboardStatus,
    submitLegalInfo
} from '../controllers/PartnerController.js';
import { 
    checkPartnerToken, 
    checkPartnerStatus,
    requirePartnerProfile,
    checkProfileAccess,
    validatePartnerRegistrationData,  // üÜï –ù–û–í–´–ô MIDDLEWARE
    validateLegalInfoData            // üÜï –ù–û–í–´–ô MIDDLEWARE
} from '../middleware/partnerAuth.middleware.js';

const router = express.Router();

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ ================

// POST /api/partners/register - –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
// ‚úÖ –î–û–ë–ê–í–õ–ï–ù–ê –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
router.post('/register', 
    validatePartnerRegistrationData,  // üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    registerPartner
);

// POST /api/partners/login - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.post('/login', loginPartnerController);

// ================ –ó–ê–©–ò–©–ï–ù–ù–´–ï –†–û–£–¢–´ (–±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞) ================

// GET /api/partners/verify - –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.get('/verify', checkPartnerToken, verifyPartner);

// GET /api/partners/dashboard - –°—Ç–∞—Ç—É—Å –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.get('/dashboard', checkPartnerToken, getDashboardStatus);

// ================ –Æ–†–ò–î–ò–ß–ï–°–ö–ò–ï –î–û–ö–£–ú–ï–ù–¢–´ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç–∞—Ç—É—Å 'approved') ================

// POST /api/partners/legal-info/:request_id - –ü–æ–¥–∞—á–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
// ‚úÖ –î–û–ë–ê–í–õ–ï–ù–ê –≤–∞–ª–∏–¥–∞—Ü–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
router.post('/legal-info/:request_id', 
    checkPartnerStatus(['approved']),  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
    validateLegalInfoData,             // üÜï –í–∞–ª–∏–¥–∞—Ü–∏—è SIRET, IBAN, TVA –∏ –¥—Ä.
    submitLegalInfo                    // –¢–µ–ø–µ—Ä—å –ø–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤–º–µ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∏
);

// ================ –ü–†–û–§–ò–õ–¨ (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å + –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞) ================

// GET /api/partners/profile - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.get('/profile', requirePartnerProfile, getProfile);

// GET /api/partners/profile/:id - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ ID (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.get('/profile/:id', checkProfileAccess, getProfile);

// PUT /api/partners/profile/:id - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)  
router.put('/profile/:id', checkProfileAccess, updateProfile);

// DELETE /api/partners/profile/:id - –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ (–ª–æ–≥–∏–∫–∞ –Ω–µ —Ç—Ä–æ–Ω—É—Ç–∞)
router.delete('/profile/:id', checkPartnerToken, deletePartner);

// ================ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ú–ê–†–®–†–£–¢–´ (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è) ================

// üÜï –ù–û–í–´–ô –ú–ê–†–®–†–£–¢: –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
router.post('/validate-registration', 
    validatePartnerRegistrationData,
    (req, res) => {
        res.status(200).json({
            result: true,
            message: "–î–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–∞–ª–∏–¥–Ω—ã",
            validated_fields: {
                phone_format: "french",
                has_brand_name: !!req.body.brand_name,
                has_whatsapp_consent: req.body.whatsapp_consent !== undefined,
                coordinates_valid: !isNaN(parseFloat(req.body.latitude)) && !isNaN(parseFloat(req.body.longitude))
            }
        });
    }
);

// üÜï –ù–û–í–´–ô –ú–ê–†–®–†–£–¢: –í–∞–ª–∏–¥–∞—Ü–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
router.post('/validate-legal', 
    checkPartnerToken,
    validateLegalInfoData,
    (req, res) => {
        res.status(200).json({
            result: true,
            message: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã",
            validated_fields: {
                siret_format: "valid_14_digits",
                iban_format: "french_iban",
                tva_format: req.body.tva_number ? "french_tva" : "not_provided",
                legal_form: req.body.legal_form,
                phone_format: "french"
            }
        });
    }
);

// ================ –°–ü–†–ê–í–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø ================

// GET /api/partners/forms/legal-forms - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö —Ñ–æ—Ä–º
router.get('/forms/legal-forms', (req, res) => {
    const legalForms = [
        'Auto-entrepreneur',
        'SASU', 
        'SARL',
        'SAS',
        'EURL',
        'SA',
        'SNC',
        'SCI',
        'SELARL',
        'Micro-entreprise',
        'EI',
        'EIRL',
        'Autre'
    ];

    res.status(200).json({
        result: true,
        message: "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º—ã —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü –≤–æ –§—Ä–∞–Ω—Ü–∏–∏",
        legal_forms: legalForms.map(form => ({
            value: form,
            label: form,
            description: getLegalFormDescription(form)
        }))
    });
});

// GET /api/partners/validation/examples - –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö
router.get('/validation/examples', (req, res) => {
    res.status(200).json({
        result: true,
        message: "–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö",
        examples: {
            french_phone: [
                "+33 1 42 34 56 78",
                "01 42 34 56 78",
                "+33 6 12 34 56 78"
            ],
            siret_number: [
                "123 456 789 00014",
                "12345678900014"
            ],
            french_iban: [
                "FR76 3000 6000 0112 3456 7890 189",
                "FR7630006000011234567890189"
            ],
            french_tva: [
                "FR12 345678912",
                "FR12345678912"
            ],
            coordinates: {
                paris: { latitude: 48.8566, longitude: 2.3522 },
                marseille: { latitude: 43.2965, longitude: 5.3698 },
                lyon: { latitude: 45.7640, longitude: 4.8357 }
            }
        },
        validation_rules: {
            phone: "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç: +33 –∏–ª–∏ 0 + 9 —Ü–∏—Ñ—Ä",
            siret: "–¢–æ—á–Ω–æ 14 —Ü–∏—Ñ—Ä",
            iban: "–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å FR + 25 —Å–∏–º–≤–æ–ª–æ–≤",
            tva: "FR + 11 —Ü–∏—Ñ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
            coordinates: "Latitude: -90 –¥–æ 90, Longitude: -180 –¥–æ 180"
        }
    });
});

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Ñ–æ—Ä–º—ã
 */
function getLegalFormDescription(form) {
    const descriptions = {
        'Auto-entrepreneur': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å —Å —É–ø—Ä–æ—â–µ–Ω–Ω—ã–º —Ä–µ–∂–∏–º–æ–º',
        'SASU': '–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –∞–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ —Å –æ–¥–Ω–∏–º –∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–º',
        'SARL': '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é',
        'SAS': '–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ –∞–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ',
        'EURL': '–ü—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é',
        'SA': '–ê–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ',
        'SNC': '–ü–æ–ª–Ω–æ–µ —Ç–æ–≤–∞—Ä–∏—â–µ—Å—Ç–≤–æ',
        'SCI': '–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏',
        'SELARL': '–û–±—â–µ—Å—Ç–≤–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é –ª–∏–±–µ—Ä–∞–ª—å–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π',
        'Micro-entreprise': '–ú–∏–∫—Ä–æ–ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ',
        'EI': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ',
        'EIRL': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é',
        'Autre': '–î—Ä—É–≥–∞—è —Ñ–æ—Ä–º–∞'
    };
    
    return descriptions[form] || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
}

export default router;
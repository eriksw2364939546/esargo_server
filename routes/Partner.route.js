// routes/Partner.route.js (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π)
import express from 'express';
import {
  createInitialPartnerRequest,
  submitPartnerLegalInfo,
  loginPartnerUser,
  getPartnerProfileData,
  getRequestStatus,
  getPartnerRequests,
  updatePartnerRequestStatus,
  approveLegalInfoAndCreate,
  rejectLegalInfoData,
  getRequestDetails
} from '../controllers/PartnerController.js';
import { 
  authenticateUser, 
  requireRole,
  requireAdminPermission,
  optionalAuth 
} from '../middleware/auth.middleware.js';

const router = express.Router();

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ ================

// POST /api/partners/login - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
router.post('/login', loginPartnerUser);

// GET /api/partners/health - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ä–æ—É—Ç–æ–≤
router.get('/health', (req, res) => {
  res.json({
    result: true,
    message: "Partner routes working with service layer",
    service_layer: "enabled",
    meta_model: "enabled",
    available_endpoints: {
      // –ü—É–±–ª–∏—á–Ω—ã–µ
      login: "POST /api/partners/login",
      
      // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
      create_initial: "POST /api/partners/initial-request",
      submit_legal: "POST /api/partners/:request_id/legal-info",
      request_status: "GET /api/partners/status",
      
      // –ü—Ä–æ—Ñ–∏–ª—å –ø–∞—Ä—Ç–Ω–µ—Ä–∞
      profile: "GET /api/partners/profile",
      
      // –ê–¥–º–∏–Ω—Å–∫–∏–µ
      list_requests: "GET /api/partners/requests",
      request_details: "GET /api/partners/requests/:request_id",
      update_status: "PATCH /api/partners/:id/status",
      approve_legal: "POST /api/partners/legal-info/:legal_info_id/approve",
      reject_legal: "POST /api/partners/legal-info/:legal_info_id/reject"
    },
    timestamp: new Date().toISOString()
  });
});

// ================ –ó–ê–©–ò–©–ï–ù–ù–´–ï –†–û–£–¢–´ –ü–ê–†–¢–ù–ï–†–û–í ================

// POST /api/partners/initial-request - –≠—Ç–∞–ø 1: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞—è–≤–∫–∏
router.post('/initial-request', authenticateUser, createInitialPartnerRequest);

// POST /api/partners/:request_id/legal-info - –≠—Ç–∞–ø 2: –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
router.post('/:request_id/legal-info', authenticateUser, submitPartnerLegalInfo);

// GET /api/partners/profile - –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä–∞
router.get('/profile', authenticateUser, requireRole('partner'), getPartnerProfileData);

// GET /api/partners/status - –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏
router.get('/status', authenticateUser, getRequestStatus);

// ================ –ê–î–ú–ò–ù–°–ö–ò–ï –†–û–£–¢–´ ================

// GET /api/partners/requests - –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ (–∞–¥–º–∏–Ω—ã)
router.get('/requests', authenticateUser, requireRole('admin'), requireAdminPermission('partners', 'read'), getPartnerRequests);

// GET /api/partners/requests/:request_id - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ
router.get('/requests/:request_id', authenticateUser, requireRole('admin'), requireAdminPermission('partners', 'read'), getRequestDetails);

// PATCH /api/partners/:id/status - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞—è–≤–∫–∏ (–∞–¥–º–∏–Ω—ã)
router.patch('/:id/status', authenticateUser, requireRole('admin'), requireAdminPermission('partners', 'approve'), updatePartnerRequestStatus);

// üÜï POST /api/partners/legal-info/:legal_info_id/approve - –û–¥–æ–±—Ä–µ–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
router.post('/legal-info/:legal_info_id/approve', authenticateUser, requireRole('admin'), requireAdminPermission('partners', 'approve'), approveLegalInfoAndCreate);

// üÜï POST /api/partners/legal-info/:legal_info_id/reject - –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö  
router.post('/legal-info/:legal_info_id/reject', authenticateUser, requireRole('admin'), requireAdminPermission('partners', 'write'), rejectLegalInfoData);

export default router;
// routes/Partner.route.js - –û–°–ù–û–í–ù–´–ï –†–û–£–¢–´ –ü–ê–†–¢–ù–ï–†–û–í üè™
import express from 'express';
import {
  registerPartner,
  loginPartnerUser,
  getDashboardStatus,
  getPartnerPersonalData,
  checkFeatureAccess,
  submitPartnerLegalInfo,
  getPartnerProfileData,
  // Legacy/deprecated
  getRequestStatus,
  createInitialPartnerRequest
} from '../controllers/PartnerController.js';
import { 
  authenticateUser, 
  requireRole
} from '../middleware/auth.middleware.js';

const router = express.Router();

// ================ –ü–£–ë–õ–ò–ß–ù–´–ï –†–û–£–¢–´ ================

/**
 * üéØ –û–°–ù–û–í–ù–û–ô –†–û–£–¢ –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
 * POST /api/partners/register
 * –°–æ–∑–¥–∞–µ—Ç: User + Meta + InitialPartnerRequest (–≠–¢–ê–ü 1)
 */
router.post('/register', registerPartner);

/**
 * üîë –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ü–ê–†–¢–ù–ï–†–ê  
 * POST /api/partners/login
 */
router.post('/login', loginPartnerUser);

/**
 * üè• HEALTH CHECK
 * GET /api/partners/health
 */
router.get('/health', (req, res) => {
  res.json({
    result: true,
    message: "üè™ Partner routes working",
    service_layer: "enabled", 
    meta_model: "enabled",
    
    // üìã WORKFLOW –ü–ê–†–¢–ù–ï–†–û–í
    partner_workflow: {
      "–≠–¢–ê–ü 1": "POST /register ‚Üí –°–æ–∑–¥–∞–Ω–∏–µ User + InitialPartnerRequest",
      "–≠–¢–ê–ü 2": "POST /legal-info/:request_id ‚Üí –ü–æ–¥–∞—á–∞ —é—Ä.–¥–∞–Ω–Ω—ã—Ö", 
      "–≠–¢–ê–ü 3": "–ê–¥–º–∏–Ω –æ–¥–æ–±—Ä—è–µ—Ç ‚Üí –°–æ–∑–¥–∞–µ—Ç—Å—è PartnerProfile",
      "–≠–¢–ê–ü 4": "–ü–∞—Ä—Ç–Ω–µ—Ä –Ω–∞–ø–æ–ª–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç",
      "–≠–¢–ê–ü 5": "–ê–¥–º–∏–Ω –æ–¥–æ–±—Ä—è–µ—Ç ‚Üí –ü—É–±–ª–∏–∫–∞—Ü–∏—è"
    },
    
    // üõ† –î–û–°–¢–£–ü–ù–´–ï ENDPOINTS
    available_endpoints: {
      // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      register: "POST /api/partners/register",
      login: "POST /api/partners/login",
      
      // –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      dashboard: "GET /api/partners/dashboard", 
      personal_data: "GET /api/partners/personal-data",
      feature_access: "GET /api/partners/access/:feature",
      
      // –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ (–≠–¢–ê–ü 2)
      submit_legal: "POST /api/partners/legal-info/:request_id",
      
      // –ü—Ä–æ—Ñ–∏–ª—å (–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –≠–¢–ê–ü–ê 3)
      profile: "GET /api/partners/profile",
      
      // Legacy/deprecated
      old_status: "GET /api/partners/status (deprecated)",
      old_initial: "POST /api/partners/initial-request (deprecated)"
    },
    
    timestamp: new Date().toISOString()
  });
});

// ================ –ó–ê–©–ò–©–ï–ù–ù–´–ï –†–û–£–¢–´ ================

/**
 * üìä –õ–ò–ß–ù–´–ô –ö–ê–ë–ò–ù–ï–¢ - –î–ê–®–ë–û–†–î
 * GET /api/partners/dashboard
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
 */
router.get('/dashboard', 
  authenticateUser, 
  requireRole('partner'), 
  getDashboardStatus
);

/**
 * üë§ –ü–ï–†–°–û–ù–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï (—Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ)
 * GET /api/partners/personal-data
 * –¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∞–∫–∫–∞—É–Ω—Ç–∞
 */
router.get('/personal-data', 
  authenticateUser, 
  requireRole('partner'), 
  getPartnerPersonalData
);

/**
 * üîê –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ê –ö –§–£–ù–ö–¶–ò–Ø–ú
 * GET /api/partners/access/:feature
 */
router.get('/access/:feature', 
  authenticateUser, 
  requireRole('partner'), 
  checkFeatureAccess
);

// ================ –≠–¢–ê–ü 2: –Æ–†–ò–î–ò–ß–ï–°–ö–ò–ï –î–ê–ù–ù–´–ï ================

/**
 * üìã –ü–û–î–ê–ß–ê –Æ–†–ò–î–ò–ß–ï–°–ö–ò–• –î–ê–ù–ù–´–•
 * POST /api/partners/legal-info/:request_id
 * –°–æ–∑–¥–∞–µ—Ç: PartnerLegalInfo + –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
 */
router.post('/legal-info/:request_id', 
  authenticateUser, 
  requireRole('partner'), 
  submitPartnerLegalInfo
);

// ================ –≠–¢–ê–ü 4+: –ü–†–û–§–ò–õ–¨ ================

/**
 * üè™ –ü–†–û–§–ò–õ–¨ –ü–ê–†–¢–ù–ï–†–ê
 * GET /api/partners/profile
 * –î–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è —é—Ä.–¥–∞–Ω–Ω—ã—Ö (–≠–¢–ê–ü 3)
 */
router.get('/profile', 
  authenticateUser, 
  requireRole('partner'), 
  getPartnerProfileData
);

// ================ LEGACY/DEPRECATED –†–û–£–¢–´ ================

/**
 * ‚ùå –£–°–¢–ê–†–ï–í–®–ò–ô: –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏
 * GET /api/partners/status
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /dashboard –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ
 */
router.get('/status', 
  authenticateUser, 
  requireRole('partner'), 
  getRequestStatus
);

/**
 * ‚ùå –£–°–¢–ê–†–ï–í–®–ò–ô: –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –∑–∞—è–≤–∫–∏
 * POST /api/partners/initial-request  
 * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ
 */
router.post('/initial-request', createInitialPartnerRequest);

// ================ MIDDLEWARE –î–õ–Ø –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö ================
router.use((error, req, res, next) => {
  console.error('Partner Route Error:', error);
  
  res.status(error.statusCode || 500).json({
    result: false,
    message: error.message || '–û—à–∏–±–∫–∞ –≤ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏—Ö —Ä–æ—É—Ç–∞—Ö',
    error_code: error.code || 'PARTNER_ROUTE_ERROR',
    timestamp: new Date().toISOString()
  });
});

// ================ –≠–ö–°–ü–û–†–¢ ================
export default router;
// controllers/FileUpload/CommonFileController.js - –û–±—â–∏–µ —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
import fs from 'fs'; // –î–û–ë–ê–í–õ–ï–ù –ò–ú–ü–û–†–¢
import {
  getUploadStatistics,
  cleanupOldFiles,
  getDirectorySize,
  safeDeleteFile,
  ensureDirectoryStructure
} from '../../services/FileUpload/common.fileUpload.service.js';

/**
 * ================== –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê–ì–†–£–ó–û–ö ==================
 */
export const getUploadStats = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –∏ owner)
    if (!['admin', 'owner'].includes(user.role)) {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const result = await getUploadStatistics();

    res.status(200).json({
      result: true,
      message: "–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ–ª—É—á–µ–Ω–∞",
      data: result
    });

  } catch (error) {
    console.error('üö® GET UPLOAD STATS Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–≥—Ä—É–∑–æ–∫",
      error: error.message
    });
  }
};

/**
 * ================== –†–ê–ó–ú–ï–† –ö–û–ù–ö–†–ï–¢–ù–û–ô –ü–ê–ü–ö–ò ==================
 */
export const getFolderSize = async (req, res) => {
  try {
    const { user } = req;
    const { directory } = req.params;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –∏ owner)
    if (!['admin', 'owner'].includes(user.role)) {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–∑–º–µ—Ä–∞ –ø–∞–ø–æ–∫"
      });
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
    const allowedDirectories = [
      'uploads/partners/partnersImage',
      'uploads/partners/menusImage',
      'uploads/partners/documentsImage',
      'uploads/couriers/avatarsImage',
      'uploads/couriers/documentsPdf',
      'uploads/admins/avatarsImage'
    ];

    if (!allowedDirectories.includes(directory)) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞"
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏
    const result = await getDirectorySize(directory);

    if (!result.success) {
      return res.status(404).json({
        result: false,
        message: result.reason === 'directory_not_found' ? '–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' : '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞'
      });
    }

    res.status(200).json({
      result: true,
      message: "–†–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ –ø–æ–ª—É—á–µ–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® GET FOLDER SIZE Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –ø–∞–ø–∫–∏",
      error: error.message
    });
  }
};

/**
 * ================== –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –§–ê–ô–õ–û–í ==================
 */
export const cleanupFiles = async (req, res) => {
  try {
    const { user } = req;
    const { directory } = req.params;
    const { max_age_days = 30 } = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤: —Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—á–∏—Å—Ç–∫—É —Ñ–∞–π–ª–æ–≤"
      });
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ —Ñ–∞–π–ª–æ–≤
    const maxAge = parseInt(max_age_days);
    if (isNaN(maxAge) || maxAge < 1 || maxAge > 365) {
      return res.status(400).json({
        result: false,
        message: "–í–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–æ–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 365 –¥–Ω–µ–π"
      });
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    const allowedDirectories = [
      'uploads/partners/partnersImage',
      'uploads/partners/menusImage',
      'uploads/partners/documentsImage',
      'uploads/couriers/avatarsImage',
      'uploads/couriers/documentsPdf',
      'uploads/admins/avatarsImage'
    ];

    if (!allowedDirectories.includes(directory)) {
      return res.status(400).json({
        result: false,
        message: "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏"
      });
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
    const result = await cleanupOldFiles(directory, maxAge);

    if (!result.success) {
      return res.status(404).json({
        result: false,
        message: result.reason === 'directory_not_found' ? '–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' : '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏'
      });
    }

    res.status(200).json({
      result: true,
      message: `–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —É–¥–∞–ª–µ–Ω–æ ${result.cleanup_summary.files_deleted} —Ñ–∞–π–ª–æ–≤`,
      data: result
    });

  } catch (error) {
    console.error('üö® CLEANUP FILES Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤",
      error: error.message
    });
  }
};

/**
 * ================== –û–ß–ò–°–¢–ö–ê –í–†–ï–ú–ï–ù–ù–´–• –§–ê–ô–õ–û–í (–î–õ–Ø –†–û–£–¢–ê) ==================
 */
export const cleanupTempFiles = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤: —Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç –æ—á–∏—â–∞—Ç—å —Ñ–∞–π–ª—ã"
      });
    }

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã (–≤—ã–∑—ã–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –æ–±—â–µ–π –æ—á–∏—Å—Ç–∫–∏)
    const result = await cleanupOldFiles();

    if (!result.success) {
      return res.status(500).json({
        result: false,
        message: result.reason === 'directory_not_found' ? 
                '–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' : '–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏'
      });
    }

    res.status(200).json({
      result: true,
      message: `–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —É–¥–∞–ª–µ–Ω–æ ${result.cleanup_summary?.files_deleted || 0} —Ñ–∞–π–ª–æ–≤`,
      data: result
    });

  } catch (error) {
    console.error('üö® CLEANUP TEMP FILES Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤",
      error: error.message
    });
  }
};

/**
 * ================== –°–û–ó–î–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –ü–ê–ü–û–ö ==================
 */
export const createDirectoryStructure = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤: —Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫"
      });
    }

    // –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    const directories = [
      'uploads/partners/partnersImage',
      'uploads/partners/menusImage',
      'uploads/partners/documentsImage',
      'uploads/couriers/avatarsImage',
      'uploads/couriers/documentsPdf',
      'uploads/admins/avatarsImage'
    ];

    const result = await ensureDirectoryStructure(directories);

    if (!result.success) {
      return res.status(500).json({
        result: false,
        message: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫",
        error: result.error
      });
    }

    res.status(200).json({
      result: true,
      message: "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞/—Å–æ–∑–¥–∞–Ω–∞",
      data: result
    });

  } catch (error) {
    console.error('üö® CREATE DIRECTORY STRUCTURE Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–ø–æ–∫",
      error: error.message
    });
  }
};

/**
 * ================== –£–î–ê–õ–ï–ù–ò–ï –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –§–ê–ô–õ–ê ==================
 */
export const deleteSpecificFile = async (req, res) => {
  try {
    const { user, deletedFile } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –∏ owner)
    if (!['admin', 'owner'].includes(user.role)) {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤"
      });
    }

    if (!deletedFile) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    res.status(200).json({
      result: true,
      message: "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω",
      data: {
        deleted_file: deletedFile,
        deleted_by: user._id,
        deleted_at: new Date()
      }
    });

  } catch (error) {
    console.error('üö® DELETE SPECIFIC FILE Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞",
      error: error.message
    });
  }
};

/**
 * ================== –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´ ==================
 */
export const getSystemHealth = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –ø–∞–ø–æ–∫
    const uploadStats = await getUploadStatistics();
    
    if (!uploadStats.success) {
      return res.status(500).json({
        result: false,
        message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–¥–ª—è UberEats-–º–∞—Å—à—Ç–∞–±–∞)
    const stats = uploadStats.upload_statistics;
    const health = {
      status: 'healthy',
      warnings: [],
      recommendations: []
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ >10GB)
    if (stats.total_size_mb > 10000) {
      health.warnings.push('–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 10GB');
      health.recommendations.push('–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ >50,000)
    if (stats.total_files > 50000) {
      health.warnings.push('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 50,000');
      health.recommendations.push('–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—á–∏—Å—Ç–∫—É —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤');
    }

    if (health.warnings.length > 0) {
      health.status = 'warning';
    }

    res.status(200).json({
      result: true,
      message: "–°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—É—á–µ–Ω–æ",
      data: {
        health,
        statistics: stats,
        checked_at: new Date()
      }
    });

  } catch (error) {
    console.error('üö® GET SYSTEM HEALTH Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã",
      error: error.message
    });
  }
};

/**
 * ================== –ü–†–û–í–ï–†–ö–ê –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò –§–ê–ô–õ–û–í–û–ô –°–ò–°–¢–ï–ú–´ ==================
 */
export const healthCheck = async (req, res) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–ø–æ–∫
    const directories = [
      'uploads/partners/partnersImage',
      'uploads/partners/menusImage',
      'uploads/couriers/avatarsImage',
      'uploads/admins/avatarsImage'
    ];

    const directoryStatus = {};
    
    for (const dir of directories) {
      try {
        await fs.promises.access(dir, fs.constants.F_OK);
        directoryStatus[dir] = 'exists';
      } catch (error) {
        directoryStatus[dir] = 'missing';
      }
    }

    const allDirectoriesExist = Object.values(directoryStatus).every(status => status === 'exists');

    res.status(200).json({
      result: true,
      message: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞",
      system_status: allDirectoriesExist ? 'healthy' : 'partial',
      timestamp: new Date().toISOString(),
      directories: directoryStatus,
      version: '2.0.0',
      features: {
        image_upload: 'enabled',
        pdf_registration: 'enabled',
        file_processing: 'enabled'
      }
    });

  } catch (error) {
    console.error('üö® HEALTH CHECK Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã",
      system_status: 'error',
      error: error.message
    });
  }
};

/**
 * ================== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –•–†–ê–ù–ò–õ–ò–©–ê (ALIAS –î–õ–Ø getUploadStats) ==================
 */
export const getStorageStats = async (req, res) => {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é getUploadStats
  return await getUploadStats(req, res);
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –°–ò–°–¢–ï–ú–ù–û–ô –°–¢–ê–¢–ò–°–¢–ò–ö–ò –§–ê–ô–õ–û–í ==================
 */
export const getSystemFilesList = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Å–µ—Ö –ø–∞–ø–æ–∫
    const uploadStats = await getUploadStatistics();
    
    if (!uploadStats.success) {
      return res.status(500).json({
        result: false,
        message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–æ–≤"
      });
    }

    res.status(200).json({
      result: true,
      message: "–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞",
      data: uploadStats
    });

  } catch (error) {
    console.error('üö® GET SYSTEM FILES LIST Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ñ–∞–π–ª–æ–≤",
      error: error.message
    });
  }
};

/**
 * ================== –£–î–ê–õ–ï–ù–ò–ï –°–ò–°–¢–ï–ú–ù–û–ì–û –§–ê–ô–õ–ê ==================
 */
export const deleteSystemFile = async (req, res) => {
  try {
    const { user, deletedFile } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
      });
    }

    if (!deletedFile) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    res.status(200).json({
      result: true,
      message: "–°–∏—Å—Ç–µ–º–Ω—ã–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω",
      data: {
        deleted_file: deletedFile,
        deleted_by: user._id,
        deleted_at: new Date(),
        operation: 'system_file_deletion'
      }
    });

  } catch (error) {
    console.error('üö® DELETE SYSTEM FILE Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —Ñ–∞–π–ª–∞",
      error: error.message
    });
  }
};

/**
 * ================== –≠–ö–°–ü–û–†–¢ ==================
 */
export default {
  getUploadStats,
  getFolderSize,
  cleanupFiles,
  cleanupTempFiles,
  createDirectoryStructure,
  deleteSpecificFile,
  getSystemHealth,
  healthCheck,
  getStorageStats,
  getSystemFilesList,
  deleteSystemFile
};
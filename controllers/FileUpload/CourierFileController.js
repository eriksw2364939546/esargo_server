// controllers/FileUpload/CourierFileController.js
import {
  uploadCourierAvatar,
  updateCourierAvatar,
  saveCourierDocuments,
  getCourierFiles,
  removeCourierDocument,
  validateCourierFileAccess
} from '../../services/FileUpload/courier.fileUpload.service.js';

/**
 * ================== –ó–ê–ì–†–£–ó–ö–ê –ê–í–ê–¢–ê–†–ê –ö–£–†–¨–ï–†–ê ==================
 */
export const uploadAvatar = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { profile_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    if (uploadedFiles.length > 1) {
      return res.status(400).json({
        result: false,
        message: "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–≤–∞—Ç–∞—Ä"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    const result = await uploadCourierAvatar(profile_id, uploadedFiles[0]);

    res.status(201).json({
      result: true,
      message: "–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® UPLOAD COURIER AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 :
                      error.message.includes('—É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω') ? 409 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞"
    });
  }
};

/**
 * ================== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ê–í–ê–¢–ê–†–ê –ö–£–†–¨–ï–†–ê ==================
 */
export const updateAvatar = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { profile_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
    const result = await updateCourierAvatar(profile_id, uploadedFiles[0]);

    res.status(200).json({
      result: true,
      message: "–ê–≤–∞—Ç–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® UPDATE COURIER AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞"
    });
  }
};

/**
 * ================== –ó–ê–ì–†–£–ó–ö–ê –î–û–ö–£–ú–ï–ù–¢–û–í –ö–£–†–¨–ï–†–ê ==================
 */
export const uploadDocuments = async (req, res) => {
  try {
    const { user, uploadedDocuments } = req;
    const { profile_id } = req.body;

    if (!uploadedDocuments || uploadedDocuments.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const result = await saveCourierDocuments(profile_id, uploadedDocuments);

    res.status(201).json({
      result: true,
      message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${result.uploaded_documents} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`,
      data: result
    });

  } catch (error) {
    console.error('üö® UPLOAD COURIER DOCUMENTS Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 :
                      error.message.includes('–ª–∏–º–∏—Ç') ? 422 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    });
  }
};

/**
 * ================== –£–î–ê–õ–ï–ù–ò–ï –î–û–ö–£–ú–ï–ù–¢–ê –ö–£–†–¨–ï–†–ê ==================
 */
export const removeDocument = async (req, res) => {
  try {
    const { user, deletedFile } = req;
    const { profile_id, document_id } = req.params;

    if (!deletedFile) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const result = await removeCourierDocument(profile_id, document_id);

    res.status(200).json({
      result: true,
      message: "–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω",
      data: {
        ...result,
        deleted_file: deletedFile
      }
    });

  } catch (error) {
    console.error('üö® REMOVE COURIER DOCUMENT Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –§–ê–ô–õ–û–í –ö–£–†–¨–ï–†–ê ==================
 */
export const getFiles = async (req, res) => {
  try {
    const { user } = req;
    const { profile_id } = req.params;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    const result = await getCourierFiles(profile_id);

    res.status(200).json({
      result: true,
      message: "–§–∞–π–ª—ã –∫—É—Ä—å–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã",
      data: result
    });

  } catch (error) {
    console.error('üö® GET COURIER FILES Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∫—É—Ä—å–µ—Ä–∞"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –§–ê–ô–õ–û–í –ü–û –¢–ò–ü–£ ==================
 */
export const getFilesList = async (req, res) => {
  try {
    const { user, filesList } = req;

    if (!filesList) {
      return res.status(400).json({
        result: false,
        message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –Ω–µ –ø–æ–ª—É—á–µ–Ω"
      });
    }

    res.status(200).json({
      result: true,
      message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω",
      data: filesList
    });

  } catch (error) {
    console.error('üö® GET COURIER FILES LIST Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–ê–¢–£–°–ê –î–û–ö–£–ú–ï–ù–¢–û–í ==================
 */
export const getDocumentStatus = async (req, res) => {
  try {
    const { user } = req;
    const { profile_id } = req.params;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateCourierFileAccess(profile_id, user._id);

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞ —Å—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    const result = await getCourierFiles(profile_id);

    res.status(200).json({
      result: true,
      message: "–°—Ç–∞—Ç—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω",
      data: {
        profile_id: result.profile_id,
        courier_name: result.courier_name,
        vehicle_type: result.vehicle_type,
        document_status: result.statistics.document_status,
        required_documents: result.statistics.required_documents,
        missing_documents: result.statistics.missing_documents,
        uploaded_documents: result.statistics.total_documents
      }
    });

  } catch (error) {
    console.error('üö® GET DOCUMENT STATUS Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    });
  }
};

/**
 * ================== –≠–ö–°–ü–û–†–¢ ==================
 */
export default {
  uploadAvatar,
  updateAvatar,
  uploadDocuments,
  removeDocument,
  getFiles,
  getFilesList,
  getDocumentStatus
};
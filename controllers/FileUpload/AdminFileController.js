// controllers/FileUpload/AdminFileController.js
import {
  uploadAdminAvatar,
  updateAdminAvatar,
  createAdminWithAvatar,
  removeAdminAvatar, // –î–û–ë–ê–í–õ–ï–ù –ò–ú–ü–û–†–¢
  getAdminFiles,
  validateAdminFileAccess,
  getSystemFileStatistics
} from '../../services/FileUpload/admin.fileUpload.service.js';

/**
 * ================== –ó–ê–ì–†–£–ó–ö–ê –ê–í–ê–¢–ê–†–ê –ê–î–ú–ò–ù–ê ==================
 */
export const uploadAvatar = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { admin_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    if (uploadedFiles.length > 1) {
      return res.status(400).json({
        result: false,
        message: "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∞–≤–∞—Ç–∞—Ä"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø (—Å–∞–º –∞–¥–º–∏–Ω –∏–ª–∏ owner)
    await validateAdminFileAccess(admin_id, user._id);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–≤–∞—Ç–∞—Ä
    const result = await uploadAdminAvatar(admin_id, uploadedFiles[0]);

    res.status(201).json({
      result: true,
      message: "–ê–≤–∞—Ç–∞—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® UPLOAD ADMIN AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') || error.message.includes('–ø—Ä–∞–≤') ? 403 :
                      error.message.includes('—É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω') ? 409 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≤–∞—Ç–∞—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    });
  }
};

/**
 * ================== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ê–í–ê–¢–ê–†–ê –ê–î–ú–ò–ù–ê ==================
 */
export const updateAvatar = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { admin_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateAdminFileAccess(admin_id, user._id);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
    const result = await updateAdminAvatar(admin_id, uploadedFiles[0]);

    res.status(200).json({
      result: true,
      message: "–ê–≤–∞—Ç–∞—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® UPDATE ADMIN AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') || error.message.includes('–ø—Ä–∞–≤') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    });
  }
};

/**
 * ================== –°–û–ó–î–ê–ù–ò–ï –ê–î–ú–ò–ù–ê –° –ê–í–ê–¢–ê–†–û–ú (–¢–û–õ–¨–ö–û OWNER) ==================
 */
export const createWithAvatar = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { first_name, last_name, email, role = 'admin' } = req.body;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ (—Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–¥–º–∏–Ω–æ–≤)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤: —Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
      });
    }

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –∞–≤–∞—Ç–∞—Ä–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    const adminData = { first_name, last_name, email, role };

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ —Å –∞–≤–∞—Ç–∞—Ä–æ–º
    const result = await createAdminWithAvatar(adminData, uploadedFiles[0], user._id);

    res.status(201).json({
      result: true,
      message: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –∞–≤–∞—Ç–∞—Ä–æ–º —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω",
      data: result
    });

  } catch (error) {
    console.error('üö® CREATE ADMIN WITH AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–ø—Ä–∞–≤') ? 403 :
                      error.message.includes('—Å—É—â–µ—Å—Ç–≤—É–µ—Ç') ? 409 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∞–≤–∞—Ç–∞—Ä–æ–º"
    });
  }
};

/**
 * ================== –£–î–ê–õ–ï–ù–ò–ï –ê–í–ê–¢–ê–†–ê –ê–î–ú–ò–ù–ê ==================
 */
export const removeAvatar = async (req, res) => {
  try {
    const { user, deletedFile } = req;
    const { admin_id } = req.params;

    if (!deletedFile) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø (—Å–∞–º –∞–¥–º–∏–Ω –∏–ª–∏ owner)
    await validateAdminFileAccess(admin_id, user._id);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const result = await removeAdminAvatar(admin_id, user._id);

    res.status(200).json({
      result: true,
      message: "–ê–≤–∞—Ç–∞—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω",
      data: {
        ...result,
        deleted_file: deletedFile
      }
    });

  } catch (error) {
    console.error('üö® REMOVE ADMIN AVATAR Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') || error.message.includes('–ø—Ä–∞–≤') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –§–ê–ô–õ–û–í –ê–î–ú–ò–ù–ê ==================
 */
export const getFiles = async (req, res) => {
  try {
    const { user } = req;
    const { admin_id } = req.params;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validateAdminFileAccess(admin_id, user._id);

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã
    const result = await getAdminFiles(admin_id);

    res.status(200).json({
      result: true,
      message: "–§–∞–π–ª—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã",
      data: result
    });

  } catch (error) {
    console.error('üö® GET ADMIN FILES Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') || error.message.includes('–ø—Ä–∞–≤') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    });
  }
};

/**
 * ================== –°–ò–°–¢–ï–ú–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ê–ô–õ–û–í (–¢–û–õ–¨–ö–û OWNER) ==================
 */
export const getSystemStatistics = async (req, res) => {
  try {
    const { user } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ owner)
    if (user.role !== 'owner') {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤: —Ç–æ–ª—å–∫–æ owner –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
      });
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const result = await getSystemFileStatistics(user._id);

    res.status(200).json({
      result: true,
      message: "–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω–∞",
      data: result
    });

  } catch (error) {
    console.error('üö® GET SYSTEM STATISTICS Controller Error:', error);
    
    const statusCode = error.message.includes('–ø—Ä–∞–≤') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –§–ê–ô–õ–û–í –ü–û –¢–ò–ü–£ ==================
 */
export const getFilesList = async (req, res) => {
  try {
    const { user, filesList } = req;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
    if (!['admin', 'owner'].includes(user.role)) {
      return res.status(403).json({
        result: false,
        message: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤"
      });
    }

    if (!filesList) {
      return res.status(400).json({
        result: false,
        message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –Ω–µ –ø–æ–ª—É—á–µ–Ω"
      });
    }

    res.status(200).json({
      result: true,
      message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω",
      data: filesList
    });

  } catch (error) {
    console.error('üö® GET ADMIN FILES LIST Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤"
    });
  }
};

/**
 * ================== –≠–ö–°–ü–û–†–¢ ==================
 */
export default {
  uploadAvatar,
  updateAvatar,
  createAdminWithAvatar: createWithAvatar,
  removeAvatar, // –î–û–ë–ê–í–õ–ï–ù–ê –§–£–ù–ö–¶–ò–Ø
  getFiles,
  getSystemStatistics,
  getFilesList
};
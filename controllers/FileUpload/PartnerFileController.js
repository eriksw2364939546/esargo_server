// controllers/FileUpload/PartnerFileController.js
import {
  uploadPartnerCoverImage,
  updatePartnerCoverImage,
  addPartnerGalleryImages,
  addMenuItemImage,
  savePartnerDocuments,
  removePartnerGalleryImage,
  getPartnerFiles,
  validatePartnerFileAccess
} from '../../services/FileUpload/partner.fileUpload.service.js';

/**
 * ================== –ó–ê–ì–†–£–ó–ö–ê –û–ë–õ–û–ñ–ö–ò –†–ï–°–¢–û–†–ê–ù–ê/–ú–ê–ì–ê–ó–ò–ù–ê ==================
 */
export const uploadCoverImage = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { profile_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –æ–±–ª–æ–∂–∫–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    if (uploadedFiles.length > 1) {
      return res.status(400).json({
        result: false,
        message: "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –æ–±–ª–æ–∂–∫—É"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–ª–æ–∂–∫—É
    const result = await uploadPartnerCoverImage(profile_id, uploadedFiles[0]);

    res.status(201).json({
      result: true,
      message: "–û–±–ª–æ–∂–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞",
      data: result
    });

  } catch (error) {
    console.error('üö® UPLOAD COVER IMAGE Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 :
                      error.message.includes('—É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞') ? 409 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–ª–æ–∂–∫–∏"
    });
  }
};

/**
 * ================== –û–ë–ù–û–í–õ–ï–ù–ò–ï –û–ë–õ–û–ñ–ö–ò ==================
 */
export const updateCoverImage = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { profile_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –æ–±–ª–æ–∂–∫–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±–ª–æ–∂–∫—É
    const result = await updatePartnerCoverImage(profile_id, uploadedFiles[0]);

    res.status(200).json({
      result: true,
      message: "–û–±–ª–æ–∂–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
      data: result
    });

  } catch (error) {
    console.error('üö® UPDATE COVER IMAGE Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–ª–æ–∂–∫–∏"
    });
  }
};

/**
 * ================== –î–û–ë–ê–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –í –ì–ê–õ–ï–†–ï–Æ ==================
 */
export const addGalleryImages = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { profile_id, image_type = 'other' } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥–∞–ª–µ—Ä–µ—é
    const result = await addPartnerGalleryImages(profile_id, uploadedFiles, image_type);

    res.status(201).json({
      result: true,
      message: `–î–æ–±–∞–≤–ª–µ–Ω–æ ${result.added_images} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –≥–∞–ª–µ—Ä–µ—é`,
      data: result
    });

  } catch (error) {
    console.error('üö® ADD GALLERY IMAGES Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 :
                      error.message.includes('–ª–∏–º–∏—Ç') ? 422 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –≥–∞–ª–µ—Ä–µ—é"
    });
  }
};

/**
 * ================== –î–û–ë–ê–í–õ–ï–ù–ò–ï –§–û–¢–û –ö –ü–†–û–î–£–ö–¢–£ –ú–ï–ù–Æ ==================
 */
export const addMenuItemImage = async (req, res) => {
  try {
    const { user, uploadedFiles } = req;
    const { product_id } = req.body;

    if (!uploadedFiles || uploadedFiles.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
      });
    }

    if (uploadedFiles.length > 1) {
      return res.status(400).json({
        result: false,
        message: "–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞"
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∫ –ø—Ä–æ–¥—É–∫—Ç—É (–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –≤–Ω—É—Ç—Ä–∏ —Å–µ—Ä–≤–∏—Å–∞)
    const result = await addMenuItemImage(product_id, uploadedFiles[0]);

    res.status(201).json({
      result: true,
      message: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ",
      data: result
    });

  } catch (error) {
    console.error('üö® ADD MENU ITEM IMAGE Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
    });
  }
};

/**
 * ================== –ó–ê–ì–†–£–ó–ö–ê –î–û–ö–£–ú–ï–ù–¢–û–í –ü–ê–†–¢–ù–ï–†–ê ==================
 */
export const uploadDocuments = async (req, res) => {
  try {
    const { user, uploadedDocuments } = req;
    const { profile_id } = req.body;

    if (!uploadedDocuments || uploadedDocuments.length === 0) {
      return res.status(400).json({
        result: false,
        message: "–î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã
    const result = await savePartnerDocuments(profile_id, uploadedDocuments);

    res.status(201).json({
      result: true,
      message: `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${result.uploaded_documents} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤`,
      data: result
    });

  } catch (error) {
    console.error('üö® UPLOAD DOCUMENTS Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
    });
  }
};

/**
 * ================== –£–î–ê–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ó –ì–ê–õ–ï–†–ï–ò ==================
 */
export const removeGalleryImage = async (req, res) => {
  try {
    const { user, deletedFile } = req;
    const { profile_id } = req.params;
    const { image_url } = req.body;

    if (!deletedFile) {
      return res.status(400).json({
        result: false,
        message: "–§–∞–π–ª –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã"
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const result = await removePartnerGalleryImage(profile_id, image_url);

    res.status(200).json({
      result: true,
      message: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≥–∞–ª–µ—Ä–µ–∏",
      data: {
        ...result,
        deleted_file: deletedFile
      }
    });

  } catch (error) {
    console.error('üö® REMOVE GALLERY IMAGE Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –§–ê–ô–õ–û–í –ü–ê–†–¢–ù–ï–†–ê ==================
 */
export const getFiles = async (req, res) => {
  try {
    const { user } = req;
    const { profile_id } = req.params;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    await validatePartnerFileAccess(profile_id, user._id);

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    const result = await getPartnerFiles(profile_id);

    res.status(200).json({
      result: true,
      message: "–§–∞–π–ª—ã –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã",
      data: result
    });

  } catch (error) {
    console.error('üö® GET PARTNER FILES Controller Error:', error);
    
    const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                      error.message.includes('–¥–æ—Å—Ç—É–ø') ? 403 : 500;

    res.status(statusCode).json({
      result: false,
      message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ø–∞—Ä—Ç–Ω–µ—Ä–∞"
    });
  }
};

/**
 * ================== –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –§–ê–ô–õ–û–í –ü–û –¢–ò–ü–£ ==================
 */
export const getFilesList = async (req, res) => {
  try {
    const { user, filesList } = req;

    if (!filesList) {
      return res.status(400).json({
        result: false,
        message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –Ω–µ –ø–æ–ª—É—á–µ–Ω"
      });
    }

    res.status(200).json({
      result: true,
      message: "–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω",
      data: filesList
    });

  } catch (error) {
    console.error('üö® GET FILES LIST Controller Error:', error);
    res.status(500).json({
      result: false,
      message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤"
    });
  }
};

/**
 * ================== –≠–ö–°–ü–û–†–¢ ==================
 */
export default {
  uploadCoverImage,
  updateCoverImage,
  addGalleryImages,
  addMenuItemImage,
  uploadDocuments,
  removeGalleryImage,
  getFiles,
  getFilesList
};
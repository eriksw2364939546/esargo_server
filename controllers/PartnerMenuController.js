// ================ controllers/PartnerMenuController.js (–ê–†–•–ò–¢–ï–ö–¢–£–†–ù–û –ü–†–ê–í–ò–õ–¨–ù–´–ô) ================
import {
    getPartnerMenuCategories,
    addMenuCategoryService,
    updateMenuCategory,
    deleteMenuCategory,
    getPartnerProducts,
    addPartnerProduct,
    updatePartnerProduct,
    deletePartnerProduct,
    getPartnerMenuStats
} from '../services/Partner/partner.menu.service.js';

/**
 * ================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–Ø–ú–ò –ú–ï–ù–Æ ==================
 * ‚úÖ –¢–û–õ–¨–ö–û req/res - –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ê–•
 */

/**
 * üìã –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –ö–ê–¢–ï–ì–û–†–ò–ô –ú–ï–ù–Æ –ü–ê–†–¢–ù–ï–†–ê
 * GET /api/partners/menu/categories
 */
export const getMenuCategories = async (req, res) => {
    try {
        const { user } = req;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await getPartnerMenuCategories(user._id);

        res.status(200).json({
            result: true,
            message: "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é –ø–æ–ª—É—á–µ–Ω—ã",
            categories: result.categories,
            total_categories: result.total_categories,
            business_info: result.business_info
        });

    } catch (error) {
        console.error('üö® GET MENU CATEGORIES - Controller Error:', error);
        res.status(500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –º–µ–Ω—é"
        });
    }
};

/**
 * ‚ûï –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ô –ö–ê–¢–ï–ì–û–†–ò–ò –ú–ï–ù–Æ
 * POST /api/partners/menu/categories
 */
export const addMenuCategory = async (req, res) => {
    try {
        const { user } = req;
        const categoryData = req.body;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await addMenuCategoryService(user._id, categoryData);

        res.status(201).json({
            result: true,
            message: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∞",
            category: result.category,
            total_categories: result.total_categories
        });

    } catch (error) {
        console.error('üö® ADD MENU CATEGORY - Controller Error:', error);
        res.status(error.message.includes('–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ') || error.message.includes('–ø—Ä–µ–≤—ã—à–∞—Ç—å') ? 400 : 500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        });
    }
};

/**
 * ‚úèÔ∏è –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ú–ï–ù–Æ
 * PUT /api/partners/menu/categories/:category_id
 */
export const updateMenuCategoryController = async (req, res) => {
    try {
        const { user } = req;
        const { category_id } = req.params;
        const updateData = req.body;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await updateMenuCategory(user._id, category_id, updateData);

        res.status(200).json({
            result: true,
            message: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
            category: result.category
        });

    } catch (error) {
        console.error('üö® UPDATE MENU CATEGORY - Controller Error:', error);
        res.status(error.message === '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' ? 404 : 500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        });
    }
};

/**
 * üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò –ú–ï–ù–Æ
 * DELETE /api/partners/menu/categories/:category_id
 */
export const deleteMenuCategoryController = async (req, res) => {
    try {
        const { user } = req;
        const { category_id } = req.params;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await deleteMenuCategory(user._id, category_id);

        res.status(200).json({
            result: true,
            message: "–ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞",
            remaining_categories: result.remaining_categories
        });

    } catch (error) {
        console.error('üö® DELETE MENU CATEGORY - Controller Error:', error);
        
        const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω–∞') ? 404 :
                          error.message.includes('—Ç–æ–≤–∞—Ä–æ–≤') ? 400 : 500;
        
        res.status(statusCode).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
        });
    }
};

/**
 * ================== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–î–£–ö–¢–ê–ú–ò/–ë–õ–Æ–î–ê–ú–ò ==================
 * ‚úÖ –¢–û–õ–¨–ö–û req/res - –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ê–•
 */

/**
 * üìã –ü–û–õ–£–ß–ï–ù–ò–ï –í–°–ï–• –ü–†–û–î–£–ö–¢–û–í –ü–ê–†–¢–ù–ï–†–ê
 * GET /api/partners/menu/products
 */
export const getProducts = async (req, res) => {
    try {
        const { user } = req;
        const filters = {
            category_slug: req.query.category_slug,
            include_inactive: req.query.include_inactive
        };

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await getPartnerProducts(user._id, filters);

        res.status(200).json({
            result: true,
            message: "–ü—Ä–æ–¥—É–∫—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã",
            products_by_category: result.products_by_category,
            total_products: result.total_products,
            business_info: result.business_info
        });

    } catch (error) {
        console.error('üö® GET PRODUCTS - Controller Error:', error);
        res.status(500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
        });
    }
};

/**
 * ‚ûï –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –ü–†–û–î–£–ö–¢–ê/–ë–õ–Æ–î–ê
 * POST /api/partners/menu/products
 */
export const addProduct = async (req, res) => {
    try {
        const { user } = req;
        const productData = req.body;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï (–≤–∫–ª—é—á–∞—è –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω/–º–∞–≥–∞–∑–∏–Ω)
        const result = await addPartnerProduct(user._id, productData);

        res.status(201).json({
            result: true,
            message: "–ü—Ä–æ–¥—É–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω",
            product: result.product,
            category_info: result.category_info,
            business_rules: result.business_rules,
            warnings: result.warnings
        });

    } catch (error) {
        console.error('üö® ADD PRODUCT - Controller Error:', error);
        
        const statusCode = error.message.includes('–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã') || 
                          error.message.includes('–±–æ–ª—å—à–µ –Ω—É–ª—è') ||
                          error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω–∞') ||
                          error.message.includes('–Ω–µ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å') ? 400 : 500;
        
        res.status(statusCode).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
        });
    }
};

/**
 * ‚úèÔ∏è –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–î–£–ö–¢–ê
 * PUT /api/partners/menu/products/:product_id
 */
export const updateProduct = async (req, res) => {
    try {
        const { user } = req;
        const { product_id } = req.params;
        const updateData = req.body;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï (–≤–∫–ª—é—á–∞—è –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω/–º–∞–≥–∞–∑–∏–Ω)
        const result = await updatePartnerProduct(user._id, product_id, updateData);

        res.status(200).json({
            result: true,
            message: "–ü—Ä–æ–¥—É–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω",
            product: result.product,
            business_rules: result.business_rules,
            warnings: result.warnings
        });

    } catch (error) {
        console.error('üö® UPDATE PRODUCT - Controller Error:', error);
        
        const statusCode = error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 :
                          error.message.includes('–±–æ–ª—å—à–µ –Ω—É–ª—è') ||
                          error.message.includes('–Ω–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å') ? 400 : 500;
        
        res.status(statusCode).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
        });
    }
};

/**
 * üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ü–†–û–î–£–ö–¢–ê
 * DELETE /api/partners/menu/products/:product_id
 */
export const deleteProduct = async (req, res) => {
    try {
        const { user } = req;
        const { product_id } = req.params;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await deletePartnerProduct(user._id, product_id);

        res.status(200).json({
            result: true,
            message: "–ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω",
            deleted_product: result.deleted_product,
            remaining_products: result.remaining_products
        });

    } catch (error) {
        console.error('üö® DELETE PRODUCT - Controller Error:', error);
        res.status(error.message.includes('–Ω–µ –Ω–∞–π–¥–µ–Ω') ? 404 : 500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞"
        });
    }
};

/**
 * ================== –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ï–ù–Æ ==================
 * ‚úÖ –¢–û–õ–¨–ö–û req/res - –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ê–•
 */

/**
 * üìä –ü–û–õ–£–ß–ï–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ú–ï–ù–Æ
 * GET /api/partners/menu/stats
 */
export const getMenuStats = async (req, res) => {
    try {
        const { user } = req;

        // ‚úÖ –í–°–Ø –õ–û–ì–ò–ö–ê –í –°–ï–†–í–ò–°–ï
        const result = await getPartnerMenuStats(user._id);

        res.status(200).json({
            result: true,
            message: "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–Ω—é –ø–æ–ª—É—á–µ–Ω–∞",
            stats: result.stats,
            business_info: result.business_info
        });

    } catch (error) {
        console.error('üö® GET MENU STATS - Controller Error:', error);
        res.status(500).json({
            result: false,
            message: error.message || "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"
        });
    }
};

/**
 * ================== –≠–ö–°–ü–û–†–¢ –í–°–ï–• –§–£–ù–ö–¶–ò–ô ================
 */
export default {
    // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –º–µ–Ω—é
    getMenuCategories,
    addMenuCategory,
    updateMenuCategory: updateMenuCategoryController,
    deleteMenuCategory: deleteMenuCategoryController,
    
    // –ü—Ä–æ–¥—É–∫—Ç—ã
    getProducts,
    addProduct,
    updateProduct,
    deleteProduct,
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    getMenuStats
};